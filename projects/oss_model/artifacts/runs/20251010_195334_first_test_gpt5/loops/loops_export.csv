loop_id,loop_type,loop_edges,description,citation_title,citation_authors,citation_year,citation_relevance,semantic_scholar_url,semantic_scholar_paper_id,citation_count,abstract,venue,fields_of_study
R01,reinforcing,Project Reputation -> Joining Rate -> New Contributors -> PR Feedback -> Software Quality and Features -> Project Reputation,"This reinforcing loop creates a virtuous cycle where a good reputation attracts contributors whose work improves the software, which in turn further enhances the project's reputation.","Understanding the Motivations, Participation, and Performance of Open Source Software Developers: A Longitudinal Study of the Apache Projects","Jeffrey A. Roberts, I. Hann, S. Slaughter",2006,Demonstrates how project reputation and success attract developers who contribute to further project improvement,https://www.semanticscholar.org/paper/bbe089fedff2d9579c9c624539a7afbf505988b2,bbe089fedff2d9579c9c624539a7afbf505988b2,1103,,Management Sciences,Computer Science
R02,reinforcing,Project Reputation -> User Base -> Project Reputation,"This reinforcing loop amplifies growth as a larger user base increases the project's visibility and adoption, which directly strengthens its reputation.",Not found in Semantic Scholar database,Not found in Semantic Scholar database,,,,,,,,
R03,reinforcing,Core Developer -> Implicit Knowledge Transfer (Mentorship) -> Promotion Rate -> Core Developer,"This reinforcing loop grows the core team as experienced developers mentor newcomers, increasing the promotion rate and expanding the core developer group.",Not found in Semantic Scholar database,Not found in Semantic Scholar database,,,,,,,,
R04,reinforcing,"Projects's Explicit Knowledge -> Explicit Knowledge Transfer (Documentation, Contributor's Guides) -> Joining Rate -> New Contributors -> PR Feedback -> Software Quality and Features -> Project Reputation -> Projects's Explicit Knowledge","This reinforcing loop accelerates contributor onboarding; better documentation lowers the barrier to entry, attracting more contributors who enhance the project.",Barriers Faced by Newcomers to Open Source Projects: A Systematic Review,"Igor Steinmacher, Marco Aurélio Graciotto Silva, M. Gerosa",2014,Shows how documentation quality affects contributor onboarding success,https://www.semanticscholar.org/paper/ed428306066209f3eb6eb695fd0082725c6e0cfb,ed428306066209f3eb6eb695fd0082725c6e0cfb,43,,International Conference on Open Source Systems,Computer Science
B01,balancing,Open Issues -> New Pr rate -> New Pull request -> Review Rate -> Pull Request Under review -> PR Review Delay -> PR Feedback -> Issue Resolution Rate -> Open Issues,"This balancing loop regulates the issue backlog by creating a workflow where new PRs address issues, but review delays can slow the overall resolution rate.",Not found in Semantic Scholar database,Not found in Semantic Scholar database,,,,,,,,
B02,balancing,Core Developer -> Developer's Turnover -> Depreciation/Loss of Knowledge -> Project's Implicit Knowledge -> Implicit Knowledge Transfer (Mentorship) -> Promotion Rate -> Core Developer,"This balancing loop counteracts core team growth; developer turnover depletes implicit knowledge, which can slow the mentorship needed to create new core developers.",Not found in Semantic Scholar database,Not found in Semantic Scholar database,,,,,,,,
B03,balancing,User Base -> User Churn Rate -> User Base,"This balancing loop stabilizes the user base by causing user churn to counteract growth, preventing unlimited expansion and seeking an equilibrium.",Not found in Semantic Scholar database,Not found in Semantic Scholar database,,,,,,,,
B04,balancing,Pull Request Under review -> PR Review Delay -> PR Feedback -> New Contributors -> New Pr rate -> New Pull request -> Review Rate -> Pull Request Under review,"This balancing loop self-regulates the PR review queue; a large backlog increases review delay, which can discourage new contributions and reduce the inflow of new PRs.",Modern Code Review: A Case Study at Google,"Caitlin Sadowski, Emma Söderberg, Luke Church, Michael A. Sipko, Alberto Bacchelli",2017,Large-scale study showing how review processes self-regulate contribution inflow,https://www.semanticscholar.org/paper/263568d744ae3d6e1284a1d10af6798fb76a398e,263568d744ae3d6e1284a1d10af6798fb76a398e,307,"Employing lightweight, tool-based code review of code changes (aka modern code review) has become the norm for a wide variety of open-source and industrial systems. In this paper, we make an exploratory investigation of modern code review at Google. Google introduced code review early on and evolved it over the years; our study sheds light on why Google introduced this practice and analyzes its current status, after the process has been refined through decades of code changes and millions of code reviews. By means of 12 interviews, a survey with 44 respondents, and the analysis of review logs for 9 million reviewed changes, we investigate motivations behind code review at Google, current practices, and developers' satisfaction and challenges.",2018 IEEE/ACM 40th International Conference on Software Engineering: Software Engineering in Practice Track (ICSE-SEIP),Computer Science
