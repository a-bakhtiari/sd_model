{
  "descriptions": [
    {
      "id": "C01",
      "description": "New users adopting the software increase the total user base."
    },
    {
      "id": "C02",
      "description": "Users leaving the project decrease the total user base."
    },
    {
      "id": "C03",
      "description": "Positive project activities and outcomes build up the project's reputation."
    },
    {
      "id": "C04",
      "description": "Negative events or lack of progress cause the project's reputation to decline."
    },
    {
      "id": "C05",
      "description": "Higher software quality and more features improve the project's reputation."
    },
    {
      "id": "C06",
      "description": "A larger user base provides more visibility and social proof, enhancing reputation."
    },
    {
      "id": "C07",
      "description": "Positive interactions and trust-building activities strengthen the community's health."
    },
    {
      "id": "C08",
      "description": "Toxic behavior and conflict erode the community's cohesion and health."
    },
    {
      "id": "C09",
      "description": "Developers leaving the project reduce the number of core developers."
    },
    {
      "id": "C10",
      "description": "New pull requests being submitted increase the stock of new pull requests."
    },
    {
      "id": "C11",
      "description": "Initiating the review of a pull request moves it from 'new' to 'under review'."
    },
    {
      "id": "C12",
      "description": "Starting a review adds a pull request to the 'under review' stock."
    },
    {
      "id": "C13",
      "description": "Merging or committing code removes the pull request from the 'under review' stock."
    },
    {
      "id": "C14",
      "description": "Merging pull requests adds new code to the source code base."
    },
    {
      "id": "C15",
      "description": "Rejecting a pull request removes it from the 'under review' stock."
    },
    {
      "id": "C16",
      "description": "Fewer core developers increase the average delay for reviewing pull requests."
    },
    {
      "id": "C17",
      "description": "Longer review delays slow down the provision of feedback to contributors."
    },
    {
      "id": "C18",
      "description": "As new contributors gain skills, they move out of the 'new contributors' stock."
    },
    {
      "id": "C19",
      "description": "New contributors gaining skills join the stock of experienced contributors."
    },
    {
      "id": "C20",
      "description": "Promoting experienced contributors moves them out of that stock."
    },
    {
      "id": "C21",
      "description": "Promoting experienced contributors adds them to the core developer stock."
    },
    {
      "id": "C22",
      "description": "A higher joining rate increases the number of new contributors."
    },
    {
      "id": "C23",
      "description": "A larger backlog of pull requests under review increases the demand for feedback."
    },
    {
      "id": "C24",
      "description": "Knowledge loss, such as through forgetting, depletes the project's implicit knowledge."
    },
    {
      "id": "C25",
      "description": "Developer turnover directly causes a loss of their unique, implicit knowledge."
    },
    {
      "id": "C26",
      "description": "A larger base of implicit knowledge provides more material for mentorship."
    },
    {
      "id": "C27",
      "description": "Effective mentorship accelerates the skill development of contributors."
    },
    {
      "id": "C28",
      "description": "Effective mentorship prepares contributors for promotion more quickly."
    },
    {
      "id": "C29",
      "description": "More core developers increase the capacity for mentorship and knowledge transfer."
    },
    {
      "id": "C30",
      "description": "Converting implicit knowledge into explicit forms reduces the implicit knowledge stock."
    },
    {
      "id": "C31",
      "description": "Converting implicit knowledge into explicit forms increases the explicit knowledge stock."
    },
    {
      "id": "C32",
      "description": "Learning from explicit knowledge internalizes it, reducing the reliance on the explicit stock."
    },
    {
      "id": "C33",
      "description": "Learning from explicit knowledge internalizes it, increasing an individual's implicit knowledge."
    },
    {
      "id": "C34",
      "description": "Timely, constructive feedback encourages new contributors to stay and remain active."
    },
    {
      "id": "C35",
      "description": "Quality feedback helps experienced contributors refine their skills and remain engaged."
    },
    {
      "id": "C36",
      "description": "Positive feedback reinforces core developers' commitment and sense of value."
    },
    {
      "id": "C37",
      "description": "New contributors create a higher demand for feedback on their pull requests."
    },
    {
      "id": "C38",
      "description": "Experienced contributors submit more complex work, requiring detailed feedback."
    },
    {
      "id": "C39",
      "description": "Providing feedback is a necessary step before a pull request can be finalized."
    },
    {
      "id": "C40",
      "description": "Well-documented explicit knowledge facilitates easier knowledge transfer to newcomers."
    },
    {
      "id": "C41",
      "description": "Good documentation lowers the barrier to entry, increasing the joining rate."
    },
    {
      "id": "C42",
      "description": "Clear documentation and guides accelerate the skill development of contributors."
    },
    {
      "id": "C43",
      "description": "Users and developers reporting issues increase the stock of open issues."
    },
    {
      "id": "C44",
      "description": "Resolving issues removes them from the open issues stock."
    },
    {
      "id": "C45",
      "description": "Resolving issues adds them to the stock of closed issues."
    },
    {
      "id": "C46",
      "description": "More open issues represent more work to be done, stimulating the creation of pull requests."
    },
    {
      "id": "C47",
      "description": "Community discussions and Q&A add valuable content to the searchable knowledge base."
    },
    {
      "id": "C48",
      "description": "Feedback and discussions in pull requests become a searchable resource for others."
    },
    {
      "id": "C49",
      "description": "Closed issues, especially with resolutions, add solutions to the knowledge base."
    },
    {
      "id": "C50",
      "description": "A rich searchable knowledge base is a primary source of the project's explicit knowledge."
    },
    {
      "id": "C51",
      "description": "Community discussions generate content that is archived in the knowledge base."
    },
    {
      "id": "C52",
      "description": "A strong project reputation attracts more potential contributors, increasing the joining rate."
    },
    {
      "id": "C53",
      "description": "A good reputation makes the software more attractive, leading to a larger user base."
    },
    {
      "id": "C54",
      "description": "Open issues represent user needs and problems, generating feedback for the project."
    },
    {
      "id": "C55",
      "description": "User and developer feedback often highlights new problems, creating more open issues."
    },
    {
      "id": "C56",
      "description": "More source code has a larger surface area, leading to more issues being discovered and reported."
    },
    {
      "id": "C57",
      "description": "A healthy, collaborative community is a positive signal that enhances project reputation."
    },
    {
      "id": "C58",
      "description": "A positive project reputation makes it more appealing for developers to join."
    },
    {
      "id": "C59",
      "description": "Clear contributor guides make it easier for newcomers to join, increasing the joining rate."
    },
    {
      "id": "C60",
      "description": "More maintainer time dedicated to issues increases the rate at which they are resolved."
    },
    {
      "id": "C61",
      "description": "A larger backlog of open issues creates more work, potentially slowing the resolution rate per issue."
    },
    {
      "id": "C62",
      "description": "A high reputation sets high expectations; failing to meet them can accelerate reputation decline."
    },
    {
      "id": "C63",
      "description": "A larger base of explicit knowledge provides more material for contributors to learn and internalize."
    },
    {
      "id": "C64",
      "description": "A larger user base means more people who might eventually stop using the software."
    },
    {
      "id": "C65",
      "description": "Pull requests that are under review and approved are merged into the codebase."
    },
    {
      "id": "C66",
      "description": "Pull requests under review that do not meet standards are rejected."
    },
    {
      "id": "C67",
      "description": "New pull requests entering the system become available for core developers to review."
    },
    {
      "id": "C68",
      "description": "A larger pool of core developers means more individuals who might eventually leave the project."
    },
    {
      "id": "C69",
      "description": "Experienced contributors are the pool from which individuals are promoted to core developers."
    },
    {
      "id": "C70",
      "description": "New contributors are the primary group undergoing skill development."
    },
    {
      "id": "C71",
      "description": "A larger stock of implicit knowledge represents more knowledge that can be lost over time."
    },
    {
      "id": "C72",
      "description": "A rich base of implicit knowledge provides more material to be documented as explicit knowledge."
    },
    {
      "id": "C73",
      "description": "An unhealthy community is more prone to conflict and attrition, accelerating cultural erosion."
    }
  ]
}