connection_id,from_var,to_var,relationship,description,from_type,to_type,citation_title,citation_authors,citation_year,citation_relevance,semantic_scholar_url,semantic_scholar_paper_id,citation_count,abstract,venue,fields_of_study
C01,Maintainer time,Issue Resolution Rate,undeclared,More maintainer time increases the rate at which issues can be resolved.,Auxiliary,Flow,Two Case Studies of Open Source Software Development: Apache and Mozilla,"Mockus, A., Fielding, R. T., et al.",2002,Shows that available developer/maintainer effort strongly affects defect fixing and issue handling throughput.,https://www.semanticscholar.org/paper/b452c83fcdee0b9f3e02573144919487c1eae4d3,b452c83fcdee0b9f3e02573144919487c1eae4d3,1905,,TSEM,Computer Science
C01,Maintainer time,Issue Resolution Rate,undeclared,More maintainer time increases the rate at which issues can be resolved.,Auxiliary,Flow,Work Practices and Challenges in Pull-Based Development: The Contributor’s Perspective,"Gousios, G., Zaidman, A., et al.",2015,"Reports maintainers’ time constraints as a bottleneck on reviewing/fixing, implying more maintainer time increases resolution rates.",https://www.semanticscholar.org/paper/8455b1a9c02e256cf9bc3244f31110db12eb62fc,8455b1a9c02e256cf9bc3244f31110db12eb62fc,467,,International Conference on Software Engineering,Computer Science; Engineering
C02,Issue Resolution Rate,Closed Issues,undeclared,A higher issue resolution rate increases the stock of closed issues.,Flow,Stock,Two Case Studies of Open Source Software Development: Apache and Mozilla,"Mockus, A., Fielding, R. T., et al.",2002,Models and measures defect/issue lifecycles; higher resolution rates accumulate as closed defects/issues.,https://www.semanticscholar.org/paper/b452c83fcdee0b9f3e02573144919487c1eae4d3,b452c83fcdee0b9f3e02573144919487c1eae4d3,1905,,TSEM,Computer Science
C02,Issue Resolution Rate,Closed Issues,undeclared,A higher issue resolution rate increases the stock of closed issues.,Flow,Stock,What Makes a Good Bug Report?,"Bettenburg, N., Premraj, R., et al.",2008,Analyzes bug handling workflow where resolved bugs transition to closed states; resolution rate increases closed count.,https://www.semanticscholar.org/paper/21fa1dba8539598210496cfcdb853fef719a0805,21fa1dba8539598210496cfcdb853fef719a0805,879,,IEEE Transactions on Software Engineering,Computer Science; Engineering
C02,Issue Resolution Rate,Closed Issues,undeclared,A higher issue resolution rate increases the stock of closed issues.,Flow,Stock,Who Should Fix This Bug?,"Anvik, J., Hiew, L., et al.",2006,"Triage/assignment efficiency increases resolution throughput, directly increasing closed issues.",https://www.semanticscholar.org/paper/b3b3c562a45d7710d6f62ad8f210ebca9a47d23f,b3b3c562a45d7710d6f62ad8f210ebca9a47d23f,1087,,International Conference on Software Engineering,Computer Science
C03,Projects's Explicit Knowledge,"Explicit Knowledge Transfer (Documentation, Contributor's Guides)",undeclared,A larger base of explicit knowledge enables more effective knowledge transfer through documentation.,Stock,Auxiliary,A Dynamic Theory of Organizational Knowledge Creation,"Nonaka, I.",1994,"SECI model posits that a larger base of explicit knowledge facilitates externalization and combination, enabling more effective documentation transfer.",https://www.semanticscholar.org/paper/22e3ed9487362117d7837b9c2e6f889c96d769bd,22e3ed9487362117d7837b9c2e6f889c96d769bd,18687,,,Business
C04,"Explicit Knowledge Transfer (Documentation, Contributor's Guides)",Joining Rate,undeclared,"Better documentation lowers the barrier to entry, increasing the potential joining rate.",Auxiliary,Auxiliary,Barriers Faced by Newcomers to Open Source Projects: A Systematic Review,"Steinmacher, I., Conte, T., et al.",2015,Identifies poor documentation as a major entry barrier; better docs increase newcomer joining.,https://www.semanticscholar.org/paper/ed428306066209f3eb6eb695fd0082725c6e0cfb,ed428306066209f3eb6eb695fd0082725c6e0cfb,43,,International Conference on Open Source Systems,Computer Science
C04,"Explicit Knowledge Transfer (Documentation, Contributor's Guides)",Joining Rate,undeclared,"Better documentation lowers the barrier to entry, increasing the potential joining rate.",Auxiliary,Auxiliary,More Common Than You Think: An In-Depth Study of Casual Contributors,"Pinto, G., Wiese, I., et al.",2016,Shows documentation and contribution guides enable casual contributors to join and submit changes.,https://www.semanticscholar.org/paper/036fa7bf6b1d33f80938a752c24aeb0bfed613c6,036fa7bf6b1d33f80938a752c24aeb0bfed613c6,118,,"IEEE International Conference on Software Analysis, Evolution, and Reengineering",Computer Science
C05,"Explicit Knowledge Transfer (Documentation, Contributor's Guides)",Skill up,undeclared,"Clear documentation helps contributors learn faster, increasing their skill-up rate.",Auxiliary,Flow,Barriers Faced by Newcomers to Open Source Projects: A Systematic Review,"Steinmacher, I., Conte, T., et al.",2015,Newcomers learn faster and progress when projects offer clear documentation and tutorials.,https://www.semanticscholar.org/paper/ed428306066209f3eb6eb695fd0082725c6e0cfb,ed428306066209f3eb6eb695fd0082725c6e0cfb,43,,International Conference on Open Source Systems,Computer Science
C06,Project Reputation,Joining Rate,positive,"A better project reputation attracts more potential contributors, increasing the joining rate.",Stock,Auxiliary,"Community, Joining, and Specialization in Open Source Software Innovation","von Krogh, G., Spaeth, S., et al.",2003,Finds reputation and legitimacy draw newcomers into OSS communities.,https://www.semanticscholar.org/paper/b5ad2a6d67b8031668a53b704d7da9c0a8adbdce,b5ad2a6d67b8031668a53b704d7da9c0a8adbdce,1095,,,Computer Science
C06,Project Reputation,Joining Rate,positive,"A better project reputation attracts more potential contributors, increasing the joining rate.",Stock,Auxiliary,Let’s Talk About Pull Requests,"Tsay, J., Dabbish, L., et al.",2014,"Highlights the influence of project and contributor reputation on engagement and acceptance, implying higher joining rates.",https://www.semanticscholar.org/paper/89b0cd5087f697ce9b9b82b6507ad48c28da400d,89b0cd5087f697ce9b9b82b6507ad48c28da400d,200,,SIGSOFT FSE,Computer Science
C07,Project Reputation,Joining Rate,undeclared,"A higher project reputation attracts more potential contributors, increasing the joining rate.",Stock,Auxiliary,"Community, Joining, and Specialization in Open Source Software Innovation","von Krogh, G., Spaeth, S., et al.",2003,Describes how esteemed projects attract new participants through reputation mechanisms.,https://www.semanticscholar.org/paper/b5ad2a6d67b8031668a53b704d7da9c0a8adbdce,b5ad2a6d67b8031668a53b704d7da9c0a8adbdce,1095,,,Computer Science
C08,Feedback,Open Issues,undeclared,More feedback from users and developers can lead to the identification of new issues.,Auxiliary,Stock,What Makes a Good Bug Report?,"Bettenburg, N., Premraj, R., et al.",2008,User/developer feedback via bug reports enlarges the set of identified issues.,https://www.semanticscholar.org/paper/21fa1dba8539598210496cfcdb853fef719a0805,21fa1dba8539598210496cfcdb853fef719a0805,879,,IEEE Transactions on Software Engineering,Computer Science; Engineering
C09,Open Issues,Feedback,undeclared,More open issues generate more feedback from users and contributors.,Stock,Auxiliary,Two Case Studies of Open Source Software Development: Apache and Mozilla,"Mockus, A., Fielding, R. T., et al.",2002,More open issues lead to increased communication and feedback cycles to diagnose and resolve.,https://www.semanticscholar.org/paper/b452c83fcdee0b9f3e02573144919487c1eae4d3,b452c83fcdee0b9f3e02573144919487c1eae4d3,1905,,TSEM,Computer Science
C09,Open Issues,Feedback,undeclared,More open issues generate more feedback from users and contributors.,Stock,Auxiliary,What Makes a Good Bug Report?,"Bettenburg, N., Premraj, R., et al.",2008,The presence of open issues prompts clarifying feedback to improve report quality and facilitate fixing.,https://www.semanticscholar.org/paper/21fa1dba8539598210496cfcdb853fef719a0805,21fa1dba8539598210496cfcdb853fef719a0805,879,,IEEE Transactions on Software Engineering,Computer Science; Engineering
C10,Open Issues,New Pr rate,positive,"More open issues represent more work, stimulating contributors to create new pull requests.",Stock,Flow,Work Practices and Challenges in Pull-Based Development: The Contributor’s Perspective,"Gousios, G., Zaidman, A., et al.",2015,"Contributors often target open issues when preparing PRs, linking issues to PR creation.",https://www.semanticscholar.org/paper/8455b1a9c02e256cf9bc3244f31110db12eb62fc,8455b1a9c02e256cf9bc3244f31110db12eb62fc,467,,International Conference on Software Engineering,Computer Science; Engineering
C10,Open Issues,New Pr rate,positive,"More open issues represent more work, stimulating contributors to create new pull requests.",Stock,Flow,More Common Than You Think: An In-Depth Study of Casual Contributors,"Pinto, G., Wiese, I., et al.",2016,"Casual contributors frequently use open issues as entry points, increasing PR submissions.",https://www.semanticscholar.org/paper/036fa7bf6b1d33f80938a752c24aeb0bfed613c6,036fa7bf6b1d33f80938a752c24aeb0bfed613c6,118,,"IEEE International Conference on Software Analysis, Evolution, and Reengineering",Computer Science
C11,New Pr rate,New Pull request,undeclared,A higher rate of new pull requests increases the stock of pull requests awaiting action.,Flow,Stock,Let’s Talk About Pull Requests,"Tsay, J., Dabbish, L., et al.",2014,Empirically examines PR pipelines where new PRs accumulate awaiting action.,https://www.semanticscholar.org/paper/89b0cd5087f697ce9b9b82b6507ad48c28da400d,89b0cd5087f697ce9b9b82b6507ad48c28da400d,200,,SIGSOFT FSE,Computer Science
C12,New Pull request,Pull Request Under review,undeclared,New pull requests move into the 'under review' stock as they begin the review process.,Stock,Stock,"Expectations, Outcomes, and Challenges of Modern Code Review","Bacchelli, A., Bird, C.",2013,Describes how newly submitted changes enter review queues as they begin review.,https://www.semanticscholar.org/paper/3ad467fe13ffa8ee705d62d8228a2c254a96f5bd,3ad467fe13ffa8ee705d62d8228a2c254a96f5bd,744,,International Conference on Software Engineering,Computer Science
C12,New Pull request,Pull Request Under review,undeclared,New pull requests move into the 'under review' stock as they begin the review process.,Stock,Stock,Modern Code Review: A Case Study at Google,"Sadowski, C., Söderberg, E., et al.",2018,Documents the workflow where submitted changes transition to 'under review'.,https://www.semanticscholar.org/paper/263568d744ae3d6e1284a1d10af6798fb76a398e,263568d744ae3d6e1284a1d10af6798fb76a398e,307,"Employing lightweight, tool-based code review of code changes (aka modern code review) has become the norm for a wide variety of open-source and industrial systems. In this paper, we make an exploratory investigation of modern code review at Google. Google introduced code review early on and evolved it over the years; our study sheds light on why Google introduced this practice and analyzes its current status, after the process has been refined through decades of code changes and millions of code reviews. By means of 12 interviews, a survey with 44 respondents, and the analysis of review logs for 9 million reviewed changes, we investigate motivations behind code review at Google, current practices, and developers' satisfaction and challenges.",2018 IEEE/ACM 40th International Conference on Software Engineering: Software Engineering in Practice Track (ICSE-SEIP),Computer Science
C13,Review Rate,New Pull request,negative,A faster review rate decreases the stock of new pull requests awaiting initial attention.,Flow,Stock,"Expectations, Outcomes, and Challenges of Modern Code Review","Bacchelli, A., Bird, C.",2013,Higher review throughput decreases the backlog of unreviewed changes.,https://www.semanticscholar.org/paper/3ad467fe13ffa8ee705d62d8228a2c254a96f5bd,3ad467fe13ffa8ee705d62d8228a2c254a96f5bd,744,,International Conference on Software Engineering,Computer Science
C13,Review Rate,New Pull request,negative,A faster review rate decreases the stock of new pull requests awaiting initial attention.,Flow,Stock,Work Practices and Challenges in Pull-Based Development,"Gousios, G., Zaidman, A., et al.",2015,Reports that quicker reviews reduce waiting PRs.,https://www.semanticscholar.org/paper/8455b1a9c02e256cf9bc3244f31110db12eb62fc,8455b1a9c02e256cf9bc3244f31110db12eb62fc,467,,International Conference on Software Engineering,Computer Science; Engineering
C14,Pull Request Under review,Source Code,undeclared,Pull requests under review contain potential code improvements that enhance the source code's value.,Stock,Auxiliary,Two Case Studies of Open Source Software Development: Apache and Mozilla,"Mockus, A., Fielding, R. T., et al.",2002,"Reviewed contributions contain potential improvements that, once merged, enhance source code.",https://www.semanticscholar.org/paper/b452c83fcdee0b9f3e02573144919487c1eae4d3,b452c83fcdee0b9f3e02573144919487c1eae4d3,1905,,TSEM,Computer Science
C14,Pull Request Under review,Source Code,undeclared,Pull requests under review contain potential code improvements that enhance the source code's value.,Stock,Auxiliary,Let’s Talk About Pull Requests,"Tsay, J., Dabbish, L., et al.",2014,Shows that PRs under review encode code changes aimed at improving functionality and quality.,https://www.semanticscholar.org/paper/89b0cd5087f697ce9b9b82b6507ad48c28da400d,89b0cd5087f697ce9b9b82b6507ad48c28da400d,200,,SIGSOFT FSE,Computer Science
C15,Merge/Commit,Pull Request Under review,negative,Merging pull requests removes them from the 'under review' stock.,Flow,Stock,"Expectations, Outcomes, and Challenges of Modern Code Review","Bacchelli, A., Bird, C.",2013,"Accepted changes exit review upon merge, decreasing reviews-in-progress.",https://www.semanticscholar.org/paper/3ad467fe13ffa8ee705d62d8228a2c254a96f5bd,3ad467fe13ffa8ee705d62d8228a2c254a96f5bd,744,,International Conference on Software Engineering,Computer Science
C15,Merge/Commit,Pull Request Under review,negative,Merging pull requests removes them from the 'under review' stock.,Flow,Stock,Work Practices and Challenges in Pull-Based Development,"Gousios, G., Zaidman, A., et al.",2015,Describes removal of PRs from review when merged.,https://www.semanticscholar.org/paper/8455b1a9c02e256cf9bc3244f31110db12eb62fc,8455b1a9c02e256cf9bc3244f31110db12eb62fc,467,,International Conference on Software Engineering,Computer Science; Engineering
C16,Rejection Rate,Pull Request Under review,negative,Rejecting pull requests removes them from the 'under review' stock.,Flow,Stock,Let’s Talk About Pull Requests,"Tsay, J., Dabbish, L., et al.",2014,"Rejected PRs are closed without merging, removing them from the under-review queue.",https://www.semanticscholar.org/paper/89b0cd5087f697ce9b9b82b6507ad48c28da400d,89b0cd5087f697ce9b9b82b6507ad48c28da400d,200,,SIGSOFT FSE,Computer Science
C17,PR Feedback,Pull Request Under review,undeclared,Providing PR feedback is a core activity performed on pull requests under review.,Auxiliary,Stock,"Expectations, Outcomes, and Challenges of Modern Code Review","Bacchelli, A., Bird, C.",2013,Code review feedback is the core activity occurring on PRs under review.,https://www.semanticscholar.org/paper/3ad467fe13ffa8ee705d62d8228a2c254a96f5bd,3ad467fe13ffa8ee705d62d8228a2c254a96f5bd,744,,International Conference on Software Engineering,Computer Science
C17,PR Feedback,Pull Request Under review,undeclared,Providing PR feedback is a core activity performed on pull requests under review.,Auxiliary,Stock,Let’s Talk About Pull Requests,"Tsay, J., Dabbish, L., et al.",2014,Documents discussions and comments as integral parts of PR review.,https://www.semanticscholar.org/paper/89b0cd5087f697ce9b9b82b6507ad48c28da400d,89b0cd5087f697ce9b9b82b6507ad48c28da400d,200,,SIGSOFT FSE,Computer Science
C18,Pull Request Under review,Rejection Rate,undeclared,A larger backlog of pull requests under review can increase the rate of rejections due to quality or relevance scrutiny.,Stock,Flow,Work Practices and Challenges in Pull-Based Development,"Gousios, G., Zaidman, A., et al.",2015,Contributor interviews note backlog pressure can lead to more conservative acceptance (more rejections).,https://www.semanticscholar.org/paper/8455b1a9c02e256cf9bc3244f31110db12eb62fc,8455b1a9c02e256cf9bc3244f31110db12eb62fc,467,,International Conference on Software Engineering,Computer Science; Engineering
C19,Core Developer,PR Review Delay,undeclared,More core developers reduce the average delay in providing pull request reviews.,Stock,Auxiliary,Don’t Touch My Code! Examining the Effects of Ownership on Software Quality,"Bird, C., Nagappan, N., et al.",2011,Larger reviewer/owner pools reduce bottlenecks; more core devs can reduce review delays.,https://www.semanticscholar.org/paper/0ff83a2c7e1c66d03b3ddd561af28c43fae27ea0,0ff83a2c7e1c66d03b3ddd561af28c43fae27ea0,391,"Ownership is a key aspect of large-scale software development. We examine the relationship between different ownership measures and software failures in two large software projects: Windows Vista and Windows 7. We find that in all cases, measures of ownership such as the number of low-expertise developers, and the proportion of ownership for the top owner have a relationship with both pre-release faults and post-release failures. We also empirically identify reasons that low-expertise developers make changes to components and show that the removal of low-expertise contributions dramatically decreases the performance of contribution based defect prediction. Finally we provide recommendations for source code change policies and utilization of resources such as code inspections based on our results.",ESEC/FSE '11,Engineering; Computer Science
C19,Core Developer,PR Review Delay,undeclared,More core developers reduce the average delay in providing pull request reviews.,Stock,Auxiliary,Modern Code Review: A Case Study at Google,"Sadowski, C., Söderberg, E., et al.",2018,Review capacity affects latency; more qualified reviewers lower delays.,https://www.semanticscholar.org/paper/263568d744ae3d6e1284a1d10af6798fb76a398e,263568d744ae3d6e1284a1d10af6798fb76a398e,307,"Employing lightweight, tool-based code review of code changes (aka modern code review) has become the norm for a wide variety of open-source and industrial systems. In this paper, we make an exploratory investigation of modern code review at Google. Google introduced code review early on and evolved it over the years; our study sheds light on why Google introduced this practice and analyzes its current status, after the process has been refined through decades of code changes and millions of code reviews. By means of 12 interviews, a survey with 44 respondents, and the analysis of review logs for 9 million reviewed changes, we investigate motivations behind code review at Google, current practices, and developers' satisfaction and challenges.",2018 IEEE/ACM 40th International Conference on Software Engineering: Software Engineering in Practice Track (ICSE-SEIP),Computer Science
C20,PR Review Delay,PR Feedback,undeclared,Shorter review delays enable more timely and frequent feedback on pull requests.,Auxiliary,Auxiliary,"Expectations, Outcomes, and Challenges of Modern Code Review","Bacchelli, A., Bird, C.",2013,Quicker review cycles enable more timely feedback exchanges.,https://www.semanticscholar.org/paper/3ad467fe13ffa8ee705d62d8228a2c254a96f5bd,3ad467fe13ffa8ee705d62d8228a2c254a96f5bd,744,,International Conference on Software Engineering,Computer Science
C20,PR Review Delay,PR Feedback,undeclared,Shorter review delays enable more timely and frequent feedback on pull requests.,Auxiliary,Auxiliary,Modern Code Review: A Case Study at Google,"Sadowski, C., Söderberg, E., et al.",2018,"Shorter delays yield more iterative, frequent feedback on changes.",https://www.semanticscholar.org/paper/263568d744ae3d6e1284a1d10af6798fb76a398e,263568d744ae3d6e1284a1d10af6798fb76a398e,307,"Employing lightweight, tool-based code review of code changes (aka modern code review) has become the norm for a wide variety of open-source and industrial systems. In this paper, we make an exploratory investigation of modern code review at Google. Google introduced code review early on and evolved it over the years; our study sheds light on why Google introduced this practice and analyzes its current status, after the process has been refined through decades of code changes and millions of code reviews. By means of 12 interviews, a survey with 44 respondents, and the analysis of review logs for 9 million reviewed changes, we investigate motivations behind code review at Google, current practices, and developers' satisfaction and challenges.",2018 IEEE/ACM 40th International Conference on Software Engineering: Software Engineering in Practice Track (ICSE-SEIP),Computer Science
C20,PR Review Delay,PR Feedback,undeclared,Shorter review delays enable more timely and frequent feedback on pull requests.,Auxiliary,Auxiliary,Let’s Talk About Pull Requests,"Tsay, J., Dabbish, L., et al.",2014,Finds that prompt responses in PRs increase feedback volume and engagement.,https://www.semanticscholar.org/paper/89b0cd5087f697ce9b9b82b6507ad48c28da400d,89b0cd5087f697ce9b9b82b6507ad48c28da400d,200,,SIGSOFT FSE,Computer Science
C21,New Contributors,Experienced Contributors,undeclared,"New contributors gain experience over time, transitioning into the experienced contributors stock.",Stock,Stock,"Community, Joining, and Specialization in Open Source Software Innovation","von Krogh, G., Spaeth, S., et al.",2003,Describes newcomer trajectories into experienced roles via learning and participation.,https://www.semanticscholar.org/paper/b5ad2a6d67b8031668a53b704d7da9c0a8adbdce,b5ad2a6d67b8031668a53b704d7da9c0a8adbdce,1095,,,Computer Science
C21,New Contributors,Experienced Contributors,undeclared,"New contributors gain experience over time, transitioning into the experienced contributors stock.",Stock,Stock,Barriers Faced by Newcomers to Open Source Projects: A Systematic Review,"Steinmacher, I., Conte, T., et al.",2015,Newcomers progress to experienced contributors as they overcome barriers and gain knowledge.,https://www.semanticscholar.org/paper/ed428306066209f3eb6eb695fd0082725c6e0cfb,ed428306066209f3eb6eb695fd0082725c6e0cfb,43,,International Conference on Open Source Systems,Computer Science
C22,Skill up,New Contributors,negative,"As contributors skill up, they transition out of the 'new contributors' stock.",Flow,Stock,Barriers Faced by Newcomers to Open Source Projects: A Systematic Review,"Steinmacher, I., Conte, T., et al.",2015,Skill acquisition enables transitions out of newcomer status.,https://www.semanticscholar.org/paper/ed428306066209f3eb6eb695fd0082725c6e0cfb,ed428306066209f3eb6eb695fd0082725c6e0cfb,43,,International Conference on Open Source Systems,Computer Science
C22,Skill up,New Contributors,negative,"As contributors skill up, they transition out of the 'new contributors' stock.",Flow,Stock,Social Coding in GitHub,"Dabbish, L., Stuart, C., et al.",2012,Transparent activity and feedback foster learning that moves contributors beyond newcomer roles.,https://www.semanticscholar.org/paper/aeaaa72d4a35388cba9ea0d81e1d46c8c2abaac1,aeaaa72d4a35388cba9ea0d81e1d46c8c2abaac1,1071,,Conference on Computer Supported Cooperative Work,Computer Science
C23,Experienced Contributors,Core Developer,undeclared,Experienced contributors are promoted into the core developer role based on merit and involvement.,Stock,Stock,"Community, Joining, and Specialization in Open Source Software Innovation","von Krogh, G., Spaeth, S., et al.",2003,Describes competence-based role progression in OSS projects.,https://www.semanticscholar.org/paper/b5ad2a6d67b8031668a53b704d7da9c0a8adbdce,b5ad2a6d67b8031668a53b704d7da9c0a8adbdce,1095,,,Computer Science
C23,Experienced Contributors,Core Developer,undeclared,Experienced contributors are promoted into the core developer role based on merit and involvement.,Stock,Stock,The Governance of Open Source Initiatives: What Does It Mean to be Community Managed?,"O’Mahony, S., Ferraro, F.",2007,Explains governance and promotion mechanisms elevating experienced contributors to core.,https://www.semanticscholar.org/paper/053550b4176757cb051b86f771245f0877a84322,053550b4176757cb051b86f771245f0877a84322,194,,,Business
C24,Promotion Rate,Experienced Contributors,negative,The promotion rate decreases the stock of experienced contributors as they move to core roles.,Flow,Stock,Role Migration and Advancement Processes in Open Source Projects,"Jensen, C., Scacchi, W.",2007,Promotion removes individuals from the experienced contributor pool into core roles.,https://www.semanticscholar.org/paper/1e3e004823dd3b7a9fc58c680d3bbb6d86e6fefa,1e3e004823dd3b7a9fc58c680d3bbb6d86e6fefa,185,,International Conference on Software Engineering,Computer Science; Engineering
C24,Promotion Rate,Experienced Contributors,negative,The promotion rate decreases the stock of experienced contributors as they move to core roles.,Flow,Stock,The Governance of Open Source Initiatives,"O’Mahony, S., Ferraro, F.",2007,Meritocratic promotions shift contributors out of non-core categories.,https://www.semanticscholar.org/paper/053550b4176757cb051b86f771245f0877a84322,053550b4176757cb051b86f771245f0877a84322,194,,,Business
C25,PR Feedback,Experienced Contributors,undeclared,Constructive PR feedback helps experienced contributors refine their skills and understanding.,Auxiliary,Stock,"Expectations, Outcomes, and Challenges of Modern Code Review","Bacchelli, A., Bird, C.",2013,Constructive feedback in code review improves developer competence and shared understanding.,https://www.semanticscholar.org/paper/3ad467fe13ffa8ee705d62d8228a2c254a96f5bd,3ad467fe13ffa8ee705d62d8228a2c254a96f5bd,744,,International Conference on Software Engineering,Computer Science
C25,PR Feedback,Experienced Contributors,undeclared,Constructive PR feedback helps experienced contributors refine their skills and understanding.,Auxiliary,Stock,Social Coding in GitHub,"Dabbish, L., Stuart, C., et al.",2012,Public feedback loops foster knowledge diffusion among experienced contributors.,https://www.semanticscholar.org/paper/aeaaa72d4a35388cba9ea0d81e1d46c8c2abaac1,aeaaa72d4a35388cba9ea0d81e1d46c8c2abaac1,1071,,Conference on Computer Supported Cooperative Work,Computer Science
C26,PR Feedback,New Contributors,undeclared,Receiving PR feedback is a primary learning mechanism for new contributors.,Auxiliary,Stock,Barriers Faced by Newcomers to Open Source Projects: A Systematic Review,"Steinmacher, I., Conte, T., et al.",2015,Identifies PR review feedback as a primary learning channel for newcomers.,https://www.semanticscholar.org/paper/ed428306066209f3eb6eb695fd0082725c6e0cfb,ed428306066209f3eb6eb695fd0082725c6e0cfb,43,,International Conference on Open Source Systems,Computer Science
C26,PR Feedback,New Contributors,undeclared,Receiving PR feedback is a primary learning mechanism for new contributors.,Auxiliary,Stock,Let’s Talk About Pull Requests,"Tsay, J., Dabbish, L., et al.",2014,PR discussions provide guidance that helps newcomers learn project norms.,https://www.semanticscholar.org/paper/89b0cd5087f697ce9b9b82b6507ad48c28da400d,89b0cd5087f697ce9b9b82b6507ad48c28da400d,200,,SIGSOFT FSE,Computer Science
C27,PR Feedback,Core Developer,undeclared,PR feedback helps core developers stay aligned on project standards and technical direction.,Auxiliary,Stock,"Expectations, Outcomes, and Challenges of Modern Code Review","Bacchelli, A., Bird, C.",2013,Review feedback aligns core developers on standards and design decisions.,https://www.semanticscholar.org/paper/3ad467fe13ffa8ee705d62d8228a2c254a96f5bd,3ad467fe13ffa8ee705d62d8228a2c254a96f5bd,744,,International Conference on Software Engineering,Computer Science
C27,PR Feedback,Core Developer,undeclared,PR feedback helps core developers stay aligned on project standards and technical direction.,Auxiliary,Stock,Modern Code Review: A Case Study at Google,"Sadowski, C., Söderberg, E., et al.",2018,Highlights feedback as a mechanism for maintaining architectural and coding alignment among core engineers.,https://www.semanticscholar.org/paper/263568d744ae3d6e1284a1d10af6798fb76a398e,263568d744ae3d6e1284a1d10af6798fb76a398e,307,"Employing lightweight, tool-based code review of code changes (aka modern code review) has become the norm for a wide variety of open-source and industrial systems. In this paper, we make an exploratory investigation of modern code review at Google. Google introduced code review early on and evolved it over the years; our study sheds light on why Google introduced this practice and analyzes its current status, after the process has been refined through decades of code changes and millions of code reviews. By means of 12 interviews, a survey with 44 respondents, and the analysis of review logs for 9 million reviewed changes, we investigate motivations behind code review at Google, current practices, and developers' satisfaction and challenges.",2018 IEEE/ACM 40th International Conference on Software Engineering: Software Engineering in Practice Track (ICSE-SEIP),Computer Science
C28,Experienced Contributors,PR Feedback,undeclared,Experienced contributors provide valuable feedback due to their deeper project knowledge.,Stock,Auxiliary,Two Case Studies of Open Source Software Development,"Mockus, A., Fielding, R. T., et al.",2002,"Experienced contributors take central roles in communication and review, generating feedback.",https://www.semanticscholar.org/paper/f862e93de89f5286edfc52cd65132dff8d8243a6,f862e93de89f5286edfc52cd65132dff8d8243a6,185,,,Computer Science
C28,Experienced Contributors,PR Feedback,undeclared,Experienced contributors provide valuable feedback due to their deeper project knowledge.,Stock,Auxiliary,Let’s Talk About Pull Requests,"Tsay, J., Dabbish, L., et al.",2014,Shows experienced members are more active in reviewing and giving feedback.,https://www.semanticscholar.org/paper/89b0cd5087f697ce9b9b82b6507ad48c28da400d,89b0cd5087f697ce9b9b82b6507ad48c28da400d,200,,SIGSOFT FSE,Computer Science
C28,Experienced Contributors,PR Feedback,undeclared,Experienced contributors provide valuable feedback due to their deeper project knowledge.,Stock,Auxiliary,"Expectations, Outcomes, and Challenges of Modern Code Review","Bacchelli, A., Bird, C.",2013,Experienced developers contribute higher-quality feedback in reviews.,https://www.semanticscholar.org/paper/3ad467fe13ffa8ee705d62d8228a2c254a96f5bd,3ad467fe13ffa8ee705d62d8228a2c254a96f5bd,744,,International Conference on Software Engineering,Computer Science
C29,New Contributors,PR Feedback,undeclared,New contributors generate questions and discussions that lead to PR feedback.,Stock,Auxiliary,Barriers Faced by Newcomers to Open Source Projects,"Steinmacher, I., Conte, T., et al.",2015,"Newcomers ask questions and request clarification, eliciting feedback.",https://www.semanticscholar.org/paper/2cc084ac5f98ad2d4c7955b009b787a22f96b385,2cc084ac5f98ad2d4c7955b009b787a22f96b385,220,,Information and Software Technology,Computer Science
C29,New Contributors,PR Feedback,undeclared,New contributors generate questions and discussions that lead to PR feedback.,Stock,Auxiliary,Social Coding in GitHub,"Dabbish, L., Stuart, C., et al.",2012,Newcomer activity triggers discussions and feedback in public PR threads.,https://www.semanticscholar.org/paper/aeaaa72d4a35388cba9ea0d81e1d46c8c2abaac1,aeaaa72d4a35388cba9ea0d81e1d46c8c2abaac1,1071,,Conference on Computer Supported Cooperative Work,Computer Science
C29,New Contributors,PR Feedback,undeclared,New contributors generate questions and discussions that lead to PR feedback.,Stock,Auxiliary,More Common Than You Think: Casual Contributors,"Pinto, G., Wiese, I., et al.",2016,Casual/new contributors tend to generate discussion that results in feedback.,https://www.semanticscholar.org/paper/036fa7bf6b1d33f80938a752c24aeb0bfed613c6,036fa7bf6b1d33f80938a752c24aeb0bfed613c6,118,,"IEEE International Conference on Software Analysis, Evolution, and Reengineering",Computer Science
C30,PR Feedback,Searchable Knowledge Base,undeclared,"PR feedback discussions are archived, contributing to the searchable knowledge base.",Auxiliary,Auxiliary,Social Coding in GitHub,"Dabbish, L., Stuart, C., et al.",2012,"Documents and discussions in PRs contribute to shared, searchable knowledge.",https://www.semanticscholar.org/paper/aeaaa72d4a35388cba9ea0d81e1d46c8c2abaac1,aeaaa72d4a35388cba9ea0d81e1d46c8c2abaac1,1071,,Conference on Computer Supported Cooperative Work,Computer Science
C30,PR Feedback,Searchable Knowledge Base,undeclared,"PR feedback discussions are archived, contributing to the searchable knowledge base.",Auxiliary,Auxiliary,"Expectations, Outcomes, and Challenges of Modern Code Review","Bacchelli, A., Bird, C.",2013,Review artifacts serve as persistent documentation for future reference.,https://www.semanticscholar.org/paper/3ad467fe13ffa8ee705d62d8228a2c254a96f5bd,3ad467fe13ffa8ee705d62d8228a2c254a96f5bd,744,,International Conference on Software Engineering,Computer Science
C31,Project's Implicit Knowledge,Depreciation/Loss of Knowledge,undeclared,A larger stock of implicit knowledge is subject to greater loss through forgetting or context decay.,Stock,Flow,A Dynamic Theory of Organizational Knowledge Creation,"Nonaka, I.",1994,Tacit (implicit) knowledge is prone to loss without externalization; larger stocks subject to greater potential depreciation.,https://www.semanticscholar.org/paper/22e3ed9487362117d7837b9c2e6f889c96d769bd,22e3ed9487362117d7837b9c2e6f889c96d769bd,18687,,,Business
C31,Project's Implicit Knowledge,Depreciation/Loss of Knowledge,undeclared,A larger stock of implicit knowledge is subject to greater loss through forgetting or context decay.,Stock,Flow,A Novel Approach for Estimating Truck Factors,"Avelino, G., Passos, L., et al.",2016,Concentrated tacit knowledge increases risk of loss; larger tacit stock at risk when key people leave.,https://www.semanticscholar.org/paper/0180369ee913930bdb6d437eaa17b7e00e8f397b,0180369ee913930bdb6d437eaa17b7e00e8f397b,124,"Truck Factor (TF) is a metric proposed by the agile community as a tool to identify concentration of knowledge in software development environments. It states the minimal number of developers that have to be hit by a truck (or quit) before a project is incapacitated. In other words, TF helps to measure how prepared is a project to deal with developer turnover. Despite its clear relevance, few studies explore this metric. Altogether there is no consensus about how to calculate it, and no supporting evidence backing estimates for systems in the wild. To mitigate both issues, we propose a novel (and automated) approach for estimating TF-values, which we execute against a corpus of 133 popular project in GitHub. We later survey developers as a means to assess the reliability of our results. Among others, we find that the majority of our target systems (65%) have TF ≤ 2. Surveying developers from 67 target systems provides confidence towards our estimates; in 84% of the valid answers we collect, developers agree or partially agree that the TF's authors are the main authors of their systems; in 53% we receive a positive or partially positive answer regarding our estimated truck factors.",IEEE International Conference on Program Comprehension,Computer Science
C32,Developer's Turnover,Depreciation/Loss of Knowledge,positive,"Higher developer turnover accelerates the loss of implicit, undocumented knowledge from the project.",Flow,Flow,A Novel Approach for Estimating Truck Factors,"Avelino, G., Passos, L., et al.",2016,Shows risk of knowledge loss due to departure of key developers (turnover).,https://www.semanticscholar.org/paper/0180369ee913930bdb6d437eaa17b7e00e8f397b,0180369ee913930bdb6d437eaa17b7e00e8f397b,124,"Truck Factor (TF) is a metric proposed by the agile community as a tool to identify concentration of knowledge in software development environments. It states the minimal number of developers that have to be hit by a truck (or quit) before a project is incapacitated. In other words, TF helps to measure how prepared is a project to deal with developer turnover. Despite its clear relevance, few studies explore this metric. Altogether there is no consensus about how to calculate it, and no supporting evidence backing estimates for systems in the wild. To mitigate both issues, we propose a novel (and automated) approach for estimating TF-values, which we execute against a corpus of 133 popular project in GitHub. We later survey developers as a means to assess the reliability of our results. Among others, we find that the majority of our target systems (65%) have TF ≤ 2. Surveying developers from 67 target systems provides confidence towards our estimates; in 84% of the valid answers we collect, developers agree or partially agree that the TF's authors are the main authors of their systems; in 53% we receive a positive or partially positive answer regarding our estimated truck factors.",IEEE International Conference on Program Comprehension,Computer Science
C33,Project's Implicit Knowledge,Explicit to Implicit Conversion,undeclared,Implicit knowledge held by contributors can be formalized and converted into explicit knowledge.,Stock,Flow,A Dynamic Theory of Organizational Knowledge Creation,"Nonaka, I.",1994,SECI model: tacit-to-explicit conversion (externalization) increases explicit knowledge.,https://www.semanticscholar.org/paper/22e3ed9487362117d7837b9c2e6f889c96d769bd,22e3ed9487362117d7837b9c2e6f889c96d769bd,18687,,,Business
C34,Explicit to Implicit Conversion,Projects's Explicit Knowledge,negative,Converting implicit knowledge to explicit knowledge increases the stock of explicit knowledge.,Flow,Stock,A Dynamic Theory of Organizational Knowledge Creation,"Nonaka, I.",1994,Externalization (tacit→explicit) increases explicit knowledge stock.,https://www.semanticscholar.org/paper/22e3ed9487362117d7837b9c2e6f889c96d769bd,22e3ed9487362117d7837b9c2e6f889c96d769bd,18687,,,Business
C35,Projects's Explicit Knowledge,Explicit to Implicit Conversion,undeclared,Existing explicit knowledge provides a foundation for creating and converting more implicit understanding.,Stock,Flow,A Dynamic Theory of Organizational Knowledge Creation,"Nonaka, I.",1994,"Explicit knowledge enables combination and internalization, supporting further tacit knowledge creation.",https://www.semanticscholar.org/paper/22e3ed9487362117d7837b9c2e6f889c96d769bd,22e3ed9487362117d7837b9c2e6f889c96d769bd,18687,,,Business
C36,Project's Implicit Knowledge,Implicit Knowledge Transfer (Mentorship),undeclared,A rich base of implicit knowledge among core members enables more effective mentorship.,Stock,Auxiliary,Role Migration and Advancement Processes in Open Source Projects,"Jensen, C., Scacchi, W.",2007,Core members pass on tacit know-how through socialization and mentorship.,https://www.semanticscholar.org/paper/1e3e004823dd3b7a9fc58c680d3bbb6d86e6fefa,1e3e004823dd3b7a9fc58c680d3bbb6d86e6fefa,185,,International Conference on Software Engineering,Computer Science; Engineering
C37,Implicit Knowledge Transfer (Mentorship),Skill up,undeclared,Effective mentorship directly accelerates the skill development of less experienced contributors.,Auxiliary,Flow,,,,,,,,,,
C38,Implicit Knowledge Transfer (Mentorship),Promotion Rate,positive,Successful mentorship increases the rate at which contributors are promoted by building their competence.,Auxiliary,Flow,Role Migration and Advancement Processes in Open Source Projects,"Jensen, C., Scacchi, W.",2007,Mentoring and increased competence lead to advancement/promotion.,https://www.semanticscholar.org/paper/1e3e004823dd3b7a9fc58c680d3bbb6d86e6fefa,1e3e004823dd3b7a9fc58c680d3bbb6d86e6fefa,185,,International Conference on Software Engineering,Computer Science; Engineering
C39,Core Developer,Implicit Knowledge Transfer (Mentorship),positive,More core developers increase the project's capacity for providing mentorship.,Stock,Auxiliary,Two Case Studies of Open Source Software Development,"Mockus, A., Fielding, R. T., et al.",2002,Core developers serve as reviewers and mentors; more core capacity increases mentorship.,https://www.semanticscholar.org/paper/f862e93de89f5286edfc52cd65132dff8d8243a6,f862e93de89f5286edfc52cd65132dff8d8243a6,185,,,Computer Science
C40,Searchable Knowledge Base,Projects's Explicit Knowledge,positive,A comprehensive knowledge base directly adds to the project's stock of explicit knowledge.,Auxiliary,Stock,Social Coding in GitHub,"Dabbish, L., Stuart, C., et al.",2012,Shared repositories of discussions/documentation directly add to explicit knowledge.,https://www.semanticscholar.org/paper/aeaaa72d4a35388cba9ea0d81e1d46c8c2abaac1,aeaaa72d4a35388cba9ea0d81e1d46c8c2abaac1,1071,,Conference on Computer Supported Cooperative Work,Computer Science
C41,Closed Issues,Searchable Knowledge Base,undeclared,"Resolved issues and their solutions are documented, enriching the searchable knowledge base.",Stock,Auxiliary,What Makes a Good Bug Report?,"Bettenburg, N., Premraj, R., et al.",2008,Resolved issues and their solutions become documented references.,https://www.semanticscholar.org/paper/21fa1dba8539598210496cfcdb853fef719a0805,21fa1dba8539598210496cfcdb853fef719a0805,879,,IEEE Transactions on Software Engineering,Computer Science; Engineering
C41,Closed Issues,Searchable Knowledge Base,undeclared,"Resolved issues and their solutions are documented, enriching the searchable knowledge base.",Stock,Auxiliary,Two Case Studies of Open Source Software Development,"Mockus, A., Fielding, R. T., et al.",2002,"Bug fixes and resolutions are recorded, enriching project archives.",https://www.semanticscholar.org/paper/f862e93de89f5286edfc52cd65132dff8d8243a6,f862e93de89f5286edfc52cd65132dff8d8243a6,185,,,Computer Science
C41,Closed Issues,Searchable Knowledge Base,undeclared,"Resolved issues and their solutions are documented, enriching the searchable knowledge base.",Stock,Auxiliary,Social Coding in GitHub,"Dabbish, L., Stuart, C., et al.",2012,Closed issues with discussion histories contribute to the searchable knowledge base.,https://www.semanticscholar.org/paper/aeaaa72d4a35388cba9ea0d81e1d46c8c2abaac1,aeaaa72d4a35388cba9ea0d81e1d46c8c2abaac1,1071,,Conference on Computer Supported Cooperative Work,Computer Science
C42,Discussions,Searchable Knowledge Base,undeclared,Community discussions generate insights and solutions that are added to the knowledge base.,Auxiliary,Auxiliary,Social Coding in GitHub,"Dabbish, L., Stuart, C., et al.",2012,Shows that discussions in social coding environments become part of shared knowledge.,https://www.semanticscholar.org/paper/aeaaa72d4a35388cba9ea0d81e1d46c8c2abaac1,aeaaa72d4a35388cba9ea0d81e1d46c8c2abaac1,1071,,Conference on Computer Supported Cooperative Work,Computer Science
C42,Discussions,Searchable Knowledge Base,undeclared,Community discussions generate insights and solutions that are added to the knowledge base.,Auxiliary,Auxiliary,"Expectations, Outcomes, and Challenges of Modern Code Review","Bacchelli, A., Bird, C.",2013,Review and design discussions become searchable artifacts.,https://www.semanticscholar.org/paper/3ad467fe13ffa8ee705d62d8228a2c254a96f5bd,3ad467fe13ffa8ee705d62d8228a2c254a96f5bd,744,,International Conference on Software Engineering,Computer Science
C43,PR Feedback,Searchable Knowledge Base,undeclared,Feedback from pull request reviews is documented and becomes part of the searchable knowledge base.,Auxiliary,Auxiliary,"Expectations, Outcomes, and Challenges of Modern Code Review","Bacchelli, A., Bird, C.",2013,"PR feedback is documented and reused, contributing to knowledge repositories.",https://www.semanticscholar.org/paper/3ad467fe13ffa8ee705d62d8228a2c254a96f5bd,3ad467fe13ffa8ee705d62d8228a2c254a96f5bd,744,,International Conference on Software Engineering,Computer Science
C44,Issue Creation Rate,Open Issues,undeclared,A higher issue creation rate increases the stock of open issues.,Flow,Stock,What Makes a Good Bug Report?,"Bettenburg, N., Premraj, R., et al.",2008,Higher reporting activity increases the number of open issues.,https://www.semanticscholar.org/paper/21fa1dba8539598210496cfcdb853fef719a0805,21fa1dba8539598210496cfcdb853fef719a0805,879,,IEEE Transactions on Software Engineering,Computer Science; Engineering
C44,Issue Creation Rate,Open Issues,undeclared,A higher issue creation rate increases the stock of open issues.,Flow,Stock,Who Should Fix This Bug?,"Anvik, J., Hiew, L., et al.",2006,Inflow of new reports increases the open issue queue that needs triage.,https://www.semanticscholar.org/paper/b3b3c562a45d7710d6f62ad8f210ebca9a47d23f,b3b3c562a45d7710d6f62ad8f210ebca9a47d23f,1087,,International Conference on Software Engineering,Computer Science
C45,Source Code,Issue Creation Rate,undeclared,"More source code provides a larger surface area for bugs and feature requests, increasing issue creation.",Auxiliary,Flow,Two Case Studies of Open Source Software Development,"Mockus, A., Fielding, R. T., et al.",2002,Larger and evolving codebases generate more defects and feature requests.,https://www.semanticscholar.org/paper/f862e93de89f5286edfc52cd65132dff8d8243a6,f862e93de89f5286edfc52cd65132dff8d8243a6,185,,,Computer Science
C45,Source Code,Issue Creation Rate,undeclared,"More source code provides a larger surface area for bugs and feature requests, increasing issue creation.",Auxiliary,Flow,Don’t Touch My Code! Examining the Effects of Ownership on Software Quality,"Bird, C., Nagappan, N., et al.",2011,"Code growth and dispersion relate to defect proneness, increasing issue creation.",https://www.semanticscholar.org/paper/0ff83a2c7e1c66d03b3ddd561af28c43fae27ea0,0ff83a2c7e1c66d03b3ddd561af28c43fae27ea0,391,"Ownership is a key aspect of large-scale software development. We examine the relationship between different ownership measures and software failures in two large software projects: Windows Vista and Windows 7. We find that in all cases, measures of ownership such as the number of low-expertise developers, and the proportion of ownership for the top owner have a relationship with both pre-release faults and post-release failures. We also empirically identify reasons that low-expertise developers make changes to components and show that the removal of low-expertise contributions dramatically decreases the performance of contribution based defect prediction. Finally we provide recommendations for source code change policies and utilization of resources such as code inspections based on our results.",ESEC/FSE '11,Engineering; Computer Science
C46,Issue Resolution Rate,Open Issues,negative,Resolving issues decreases the stock of open issues.,Flow,Stock,Two Case Studies of Open Source Software Development,"Mockus, A., Fielding, R. T., et al.",2002,Issue resolution moves issues out of the open state.,https://www.semanticscholar.org/paper/f862e93de89f5286edfc52cd65132dff8d8243a6,f862e93de89f5286edfc52cd65132dff8d8243a6,185,,,Computer Science
C46,Issue Resolution Rate,Open Issues,negative,Resolving issues decreases the stock of open issues.,Flow,Stock,Who Should Fix This Bug?,"Anvik, J., Hiew, L., et al.",2006,Fixing/closing removes items from the open issue queue.,https://www.semanticscholar.org/paper/b3b3c562a45d7710d6f62ad8f210ebca9a47d23f,b3b3c562a45d7710d6f62ad8f210ebca9a47d23f,1087,,International Conference on Software Engineering,Computer Science
C46,Issue Resolution Rate,Open Issues,negative,Resolving issues decreases the stock of open issues.,Flow,Stock,What Makes a Good Bug Report?,"Bettenburg, N., Premraj, R., et al.",2008,"Resolution leads to closure, decreasing open issues.",https://www.semanticscholar.org/paper/21fa1dba8539598210496cfcdb853fef719a0805,21fa1dba8539598210496cfcdb853fef719a0805,879,,IEEE Transactions on Software Engineering,Computer Science; Engineering
C47,Adoption Rate,User Base,undeclared,A higher adoption rate increases the size of the user base.,Flow,Stock,Determinants of Open Source Software Project Success: A Longitudinal Study,"Subramaniam, C., Sen, R., et al.",2009,"Adoption rate correlates with growth in user base (downloads, usage).",https://www.semanticscholar.org/paper/fd8818eb11f9babd493751964573b4daf7501fc0,fd8818eb11f9babd493751964573b4daf7501fc0,233,,Decision Support Systems,Computer Science; Business
C47,Adoption Rate,User Base,undeclared,A higher adoption rate increases the size of the user base.,Flow,Stock,Free/Libre Open Source Software: What We Know and What We Do Not Know,"Crowston, K., Howison, J.",2005,Discusses adoption metrics as inflows to user communities.,https://www.semanticscholar.org/paper/13a168298e16e0dba45ed95157c7b981002dcc82,13a168298e16e0dba45ed95157c7b981002dcc82,25,,,
C48,User Churn Rate,User Base,negative,User churn decreases the size of the user base.,Flow,Stock,Determinants of Open Source Software Project Success,"Subramaniam, C., Sen, R., et al.",2009,User churn reduces the size of the active user base.,https://www.semanticscholar.org/paper/fd8818eb11f9babd493751964573b4daf7501fc0,fd8818eb11f9babd493751964573b4daf7501fc0,233,,Decision Support Systems,Computer Science; Business
C48,User Churn Rate,User Base,negative,User churn decreases the size of the user base.,Flow,Stock,Free/Libre Open Source Software: What We Know and What We Do Not Know,"Crowston, K., Howison, J.",2005,Describes churn dynamics reducing community/user sizes.,https://www.semanticscholar.org/paper/13a168298e16e0dba45ed95157c7b981002dcc82,13a168298e16e0dba45ed95157c7b981002dcc82,25,,,
C49,Project Reputation,User Base,undeclared,A larger user base contributes to project visibility and reputation through usage and advocacy.,Stock,Stock,Determinants of Open Source Software Project Success,"Subramaniam, C., Sen, R., et al.",2009,Large user bases enhance visibility and perceived reputation.,https://www.semanticscholar.org/paper/fd8818eb11f9babd493751964573b4daf7501fc0,fd8818eb11f9babd493751964573b4daf7501fc0,233,,Decision Support Systems,Computer Science; Business
C49,Project Reputation,User Base,undeclared,A larger user base contributes to project visibility and reputation through usage and advocacy.,Stock,Stock,Social Coding in GitHub,"Dabbish, L., Stuart, C., et al.",2012,Crowd signals (stars/watchers/users) serve as reputation cues.,https://www.semanticscholar.org/paper/aeaaa72d4a35388cba9ea0d81e1d46c8c2abaac1,aeaaa72d4a35388cba9ea0d81e1d46c8c2abaac1,1071,,Conference on Computer Supported Cooperative Work,Computer Science
C49,Project Reputation,User Base,undeclared,A larger user base contributes to project visibility and reputation through usage and advocacy.,Stock,Stock,Predicting the Popularity of GitHub Repositories,"Borges, H., Hora, A., et al.",2016,User-facing popularity metrics are proxies for reputation.,https://www.semanticscholar.org/paper/2029ddc9936020c0b0dd55bb4437eb199d6727d7,2029ddc9936020c0b0dd55bb4437eb199d6727d7,73,"GitHub is the largest source code repository in the world. It provides a git-based source code management platform and also many features inspired by social networks. For example, GitHub users can show appreciation to projects by adding stars to them. Therefore, the number of stars of a repository is a direct measure of its popularity. In this paper, we use multiple linear regressions to predict the number of stars of GitHub repositories. These predictions are useful both to repository owners and clients, who usually want to know how their projects are performing in a competitive open source development market. In a large-scale analysis, we show that the proposed models start to provide accurate predictions after being trained with the number of stars received in the last six months. Furthermore, specific models---generated using data from repositories that share the same growth trends---are recommended for repositories with slow growth and/or for repositories with less stars. Finally, we evaluate the ability to predict not the number of stars of a repository but its rank among the GitHub repositories. We found a very strong correlation between predicted and real rankings (Spearman's rho greater than 0.95).",International Conference on Predictive Models in Software Engineering,Computer Science
C50,Reputation Building,Project Reputation,undeclared,Positive project activities and outcomes build up the project's reputation over time.,Flow,Stock,The Governance of Open Source Initiatives,"O’Mahony, S., Ferraro, F.",2007,Positive governance actions and community outcomes build reputation over time.,https://www.semanticscholar.org/paper/053550b4176757cb051b86f771245f0877a84322,053550b4176757cb051b86f771245f0877a84322,194,,,Business
C50,Reputation Building,Project Reputation,undeclared,Positive project activities and outcomes build up the project's reputation over time.,Flow,Stock,Social Coding in GitHub,"Dabbish, L., Stuart, C., et al.",2012,"Positive activities (accepted PRs, responsiveness) enhance reputation via visible signals.",https://www.semanticscholar.org/paper/aeaaa72d4a35388cba9ea0d81e1d46c8c2abaac1,aeaaa72d4a35388cba9ea0d81e1d46c8c2abaac1,1071,,Conference on Computer Supported Cooperative Work,Computer Science
C50,Reputation Building,Project Reputation,undeclared,Positive project activities and outcomes build up the project's reputation over time.,Flow,Stock,Determinants of Open Source Software Project Success,"Subramaniam, C., Sen, R., et al.",2009,Identifies drivers of perceived project success/reputation.,https://www.semanticscholar.org/paper/fd8818eb11f9babd493751964573b4daf7501fc0,fd8818eb11f9babd493751964573b4daf7501fc0,233,,Decision Support Systems,Computer Science; Business
C51,Reputation Decline,Project Reputation,negative,Negative events or poor project health cause a decline in project reputation.,Flow,Stock,,,,,,,,,,
C52,Software Quality and Features,Project Reputation,positive,High-quality software with good features enhances the project's reputation.,Auxiliary,Stock,Two Case Studies of Open Source Software Development,"Mockus, A., Fielding, R. T., et al.",2002,Quality and feature delivery bolster project standing.,https://www.semanticscholar.org/paper/f862e93de89f5286edfc52cd65132dff8d8243a6,f862e93de89f5286edfc52cd65132dff8d8243a6,185,,,Computer Science
C52,Software Quality and Features,Project Reputation,positive,High-quality software with good features enhances the project's reputation.,Auxiliary,Stock,Determinants of Open Source Software Project Success,"Subramaniam, C., Sen, R., et al.",2009,Product quality and functionality correlate with success and reputation.,https://www.semanticscholar.org/paper/fd8818eb11f9babd493751964573b4daf7501fc0,fd8818eb11f9babd493751964573b4daf7501fc0,233,,Decision Support Systems,Computer Science; Business
C53,User Base,Project Reputation,undeclared,"A large user base signals popularity and utility, bolstering the project's reputation.",Stock,Stock,Predicting the Popularity of GitHub Repositories,"Borges, H., Hora, A., et al.",2016,Large user communities drive popularity/reputation metrics.,https://www.semanticscholar.org/paper/2029ddc9936020c0b0dd55bb4437eb199d6727d7,2029ddc9936020c0b0dd55bb4437eb199d6727d7,73,"GitHub is the largest source code repository in the world. It provides a git-based source code management platform and also many features inspired by social networks. For example, GitHub users can show appreciation to projects by adding stars to them. Therefore, the number of stars of a repository is a direct measure of its popularity. In this paper, we use multiple linear regressions to predict the number of stars of GitHub repositories. These predictions are useful both to repository owners and clients, who usually want to know how their projects are performing in a competitive open source development market. In a large-scale analysis, we show that the proposed models start to provide accurate predictions after being trained with the number of stars received in the last six months. Furthermore, specific models---generated using data from repositories that share the same growth trends---are recommended for repositories with slow growth and/or for repositories with less stars. Finally, we evaluate the ability to predict not the number of stars of a repository but its rank among the GitHub repositories. We found a very strong correlation between predicted and real rankings (Spearman's rho greater than 0.95).",International Conference on Predictive Models in Software Engineering,Computer Science
C53,User Base,Project Reputation,undeclared,"A large user base signals popularity and utility, bolstering the project's reputation.",Stock,Stock,Social Coding in GitHub,"Dabbish, L., Stuart, C., et al.",2012,User counts and engagement act as reputation signals.,https://www.semanticscholar.org/paper/aeaaa72d4a35388cba9ea0d81e1d46c8c2abaac1,aeaaa72d4a35388cba9ea0d81e1d46c8c2abaac1,1071,,Conference on Computer Supported Cooperative Work,Computer Science
C54,Community Health,Project Reputation,positive,"A healthy, collaborative community positively reflects on and enhances the project's reputation.",Stock,Stock,Social Coding in GitHub,"Dabbish, L., Stuart, C., et al.",2012,Collaborative norms and responsiveness positively reflect on reputation.,https://www.semanticscholar.org/paper/aeaaa72d4a35388cba9ea0d81e1d46c8c2abaac1,aeaaa72d4a35388cba9ea0d81e1d46c8c2abaac1,1071,,Conference on Computer Supported Cooperative Work,Computer Science
C55,Trust Building,Community Health,undeclared,"Positive interactions and reliable contributions build trust, strengthening community health.",Flow,Stock,Social Coding in GitHub,"Dabbish, L., Stuart, C., et al.",2012,Trust and transparency mechanisms improve collaborative health.,https://www.semanticscholar.org/paper/aeaaa72d4a35388cba9ea0d81e1d46c8c2abaac1,aeaaa72d4a35388cba9ea0d81e1d46c8c2abaac1,1071,,Conference on Computer Supported Cooperative Work,Computer Science
C56,Culture Erosion,Community Health,negative,"Toxic interactions and burnout erode collaborative norms, damaging community health.",Flow,Stock,Gender Differences and Bias in Open Source: Pull Request Acceptance of Women Versus Men,"Terrell, J., Kofink, A., et al.",2017,Evidence of bias and negative interactions indicate culture issues that harm community well-being.,https://www.semanticscholar.org/paper/800feb42da3ef0545bfeba17b1b6348200b3f410,800feb42da3ef0545bfeba17b1b6348200b3f410,259,,PeerJ Computer Science,Computer Science
