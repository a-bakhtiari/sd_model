loop_id,loop_type,loop_edges,description,citation_title,citation_authors,citation_year,citation_relevance,semantic_scholar_url,semantic_scholar_paper_id,citation_count,abstract,venue,fields_of_study
R01,reinforcing,Project Reputation -> Joining Rate -> New Contributors -> PR Feedback -> Software Quality and Features -> Project Reputation,"This reinforcing loop creates a virtuous cycle where a strong reputation attracts contributors whose work improves the software, which in turn further enhances the project's reputation.","Community, joining, and specialization in open source software innovation: A case study","von Krogh, G., Spaeth, S., et al.",2003,"Describes how community reputation and recognition shape joining and specialization, reinforcing a cycle where recognized project quality draws in contributors who further improve the software.",https://www.semanticscholar.org/paper/b5ad2a6d67b8031668a53b704d7da9c0a8adbdce,b5ad2a6d67b8031668a53b704d7da9c0a8adbdce,1095,,,Computer Science
R01,reinforcing,Project Reputation -> Joining Rate -> New Contributors -> PR Feedback -> Software Quality and Features -> Project Reputation,"This reinforcing loop creates a virtuous cycle where a strong reputation attracts contributors whose work improves the software, which in turn further enhances the project's reputation.",Understanding sustained participation in open source software projects,"Fang, Y., Neufeld, D.",2009,"Demonstrates that status and reputation drive sustained participation, supporting the reinforcing loop between project reputation and continued contributor engagement.",https://www.semanticscholar.org/paper/9e3beb8d9aa67d2cc705dff13577443ebb7f77d8,9e3beb8d9aa67d2cc705dff13577443ebb7f77d8,387,,Journal of Management Information Systems,Sociology; Computer Science
R02,reinforcing,Project Reputation -> User Base -> Project Reputation,"This reinforcing loop amplifies project growth as a larger user base increases visibility and adoption, which directly strengthens the project's overall reputation.",Social coding in GitHub: Transparency and collaboration in an open software repository,"Dabbish, L., Stuart, C., et al.",2012,"Shows how visibility and social signals on GitHub drive attention and engagement, supporting the idea that a larger user base increases visibility/adoption and further strengthens reputation.",https://www.semanticscholar.org/paper/aeaaa72d4a35388cba9ea0d81e1d46c8c2abaac1,aeaaa72d4a35388cba9ea0d81e1d46c8c2abaac1,1071,,Conference on Computer Supported Cooperative Work,Computer Science
R02,reinforcing,Project Reputation -> User Base -> Project Reputation,"This reinforcing loop amplifies project growth as a larger user base increases visibility and adoption, which directly strengthens the project's overall reputation.",Understanding the factors that impact the popularity of GitHub repositories,"Borges, A., Hora, A., et al.",2016,"Empirically examines drivers of repository popularity, showing how visibility and adoption dynamics contribute to reputation growth.",https://www.semanticscholar.org/paper/3ae5917f7c8875b380627053829f638be89aee88,3ae5917f7c8875b380627053829f638be89aee88,306,"Software popularity is a valuable information to modern open source developers, who constantly want to know if their systems are attracting new users, if new releases are gaining acceptance, or if they are meeting user's expectations. In this paper, we describe a study on the popularity of software systems hosted at GitHub, which is the world's largest collection of open source software. GitHub provides an explicit way for users to manifest their satisfaction with a hosted repository: the stargazers button. In our study, we reveal the main factors that impact the number of stars of GitHub projects, including programming language and application domain. We also study the impact of new features on project popularity. Finally, we identify four main patterns of popularity growth, which are derived after clustering the time series representing the number of stars of 2,279 popular GitHub repositories. We hope our results provide valuable insights to developers and maintainers, which could help them on building and evolving systems in a competitive software market.",IEEE International Conference on Software Maintenance and Evolution,Computer Science
R03,reinforcing,Core Developer -> Implicit Knowledge Transfer (Mentorship) -> Promotion Rate -> Experienced Contributors -> Core Developer,"This reinforcing loop builds internal capacity as experienced core developers mentor newcomers, creating a pipeline that grows the number of senior contributors over time.",A systematic literature review on the barriers faced by newcomers to open source software projects,"Steinmacher, I., Conte, T., et al.",2015,"Identifies mentorship and onboarding practices as critical to newcomer success, supporting the reinforcing loop where experienced developers mentor newcomers who later become senior contributors.",https://www.semanticscholar.org/paper/2cc084ac5f98ad2d4c7955b009b787a22f96b385,2cc084ac5f98ad2d4c7955b009b787a22f96b385,220,,Information and Software Technology,Computer Science
R03,reinforcing,Core Developer -> Implicit Knowledge Transfer (Mentorship) -> Promotion Rate -> Experienced Contributors -> Core Developer,"This reinforcing loop builds internal capacity as experienced core developers mentor newcomers, creating a pipeline that grows the number of senior contributors over time.",Understanding broadcast based peer review on open source software projects,"Rigby, P. C., Storey, M.-A.",2011,"Shows that peer code review in OSS facilitates learning and knowledge transfer, a key mechanism through which seniors mentor newcomers and build internal capacity.",https://www.semanticscholar.org/paper/ad65fc79f86f659c1b5b6fc15337c151a6673aa6,ad65fc79f86f659c1b5b6fc15337c151a6673aa6,191,,International Conference on Software Engineering,Computer Science
R03,reinforcing,Core Developer -> Implicit Knowledge Transfer (Mentorship) -> Promotion Rate -> Experienced Contributors -> Core Developer,"This reinforcing loop builds internal capacity as experienced core developers mentor newcomers, creating a pipeline that grows the number of senior contributors over time.","Community, joining, and specialization in open source software innovation: A case study","von Krogh, G., Spaeth, S., et al.",2003,"Explains how novices develop specialized expertise through community interactions, consistent with mentoring-driven growth of senior contributor ranks.",https://www.semanticscholar.org/paper/b5ad2a6d67b8031668a53b704d7da9c0a8adbdce,b5ad2a6d67b8031668a53b704d7da9c0a8adbdce,1095,,,Computer Science
R04,reinforcing,Open Issues -> New Pr rate -> New Pull request -> Pull Request Under review -> Source Code -> Issue Creation Rate -> Open Issues,"This reinforcing loop can create a feature-driven workload spiral where more activity generates more code and complexity, leading to an increase in new issues being reported.",Two case studies of open source software development: Apache and Mozilla,"Mockus, A., Fielding, R. T., et al.",2002,"Shows that increased development activity and feature work correlate with defect reports and issue inflow, supporting a feature-driven workload spiral.",https://www.semanticscholar.org/paper/b452c83fcdee0b9f3e02573144919487c1eae4d3,b452c83fcdee0b9f3e02573144919487c1eae4d3,1905,,TSEM,Computer Science
R04,reinforcing,Open Issues -> New Pr rate -> New Pull request -> Pull Request Under review -> Source Code -> Issue Creation Rate -> Open Issues,"This reinforcing loop can create a feature-driven workload spiral where more activity generates more code and complexity, leading to an increase in new issues being reported.",Laws of software evolution: Revisited,"Lehman, M. M., Ramil, J. F.",1997,"Articulates that evolving software grows in complexity, which drives defect emergence and maintenance workload, aligning with more code leading to more issues.",https://www.semanticscholar.org/paper/54545a907a43c798c1193be643395bda3c8548e0,54545a907a43c798c1193be643395bda3c8548e0,686,,European Workshop on Software Process Technology,Computer Science
R04,reinforcing,Open Issues -> New Pr rate -> New Pull request -> Pull Request Under review -> Source Code -> Issue Creation Rate -> Open Issues,"This reinforcing loop can create a feature-driven workload spiral where more activity generates more code and complexity, leading to an increase in new issues being reported.",Predicting faults using the complexity of code changes,"Hassan, A. E.",2009,"Shows that code churn/complexity predicts defects, supporting the mechanism where more/complex changes increase new issues.",https://www.semanticscholar.org/paper/30ea1d7526f120b1275e045f4318e9fb57cc73de,30ea1d7526f120b1275e045f4318e9fb57cc73de,695,,2009 IEEE 31st International Conference on Software Engineering,Computer Science
R04,reinforcing,Open Issues -> New Pr rate -> New Pull request -> Pull Request Under review -> Source Code -> Issue Creation Rate -> Open Issues,"This reinforcing loop can create a feature-driven workload spiral where more activity generates more code and complexity, leading to an increase in new issues being reported.",Use of relative code churn measures to predict system defect density,"Nagappan, N., Ball, T.",2005,"Empirically links higher change activity to defects, reinforcing that increased activity and complexity drive issue creation.",https://www.semanticscholar.org/paper/b65c215021f062ad66e1c5080d762f589b0dbbf4,b65c215021f062ad66e1c5080d762f589b0dbbf4,881,,"Proceedings. 27th International Conference on Software Engineering, 2005. ICSE 2005.",Computer Science
B01,balancing,Open Issues -> Issue Resolution Rate -> Open Issues,"This balancing loop stabilizes the issue backlog by increasing resolution efforts as the number of open issues grows, seeking an equilibrium.",Who should fix this bug?,"Anvik, J., Hiew, L., et al.",2006,"Bug triage techniques increase resolution capacity as backlog grows, contributing to a balancing effect on the issue queue.",https://www.semanticscholar.org/paper/b3b3c562a45d7710d6f62ad8f210ebca9a47d23f,b3b3c562a45d7710d6f62ad8f210ebca9a47d23f,1087,,International Conference on Software Engineering,Computer Science
B01,balancing,Open Issues -> Issue Resolution Rate -> Open Issues,"This balancing loop stabilizes the issue backlog by increasing resolution efforts as the number of open issues grows, seeking an equilibrium.",Characterizing and predicting which bugs get fixed,"Guo, P. J., Zimmermann, T., et al.",2010,"Shows how projects prioritize and resolve issues based on backlog characteristics, evidencing adaptive resolution efforts as open issues accumulate.",https://www.semanticscholar.org/paper/8f0dd644726fca7a553ea4ab424c5c48da9053a5,8f0dd644726fca7a553ea4ab424c5c48da9053a5,275,,2010 ACM/IEEE 32nd International Conference on Software Engineering,Computer Science
B01,balancing,Open Issues -> Issue Resolution Rate -> Open Issues,"This balancing loop stabilizes the issue backlog by increasing resolution efforts as the number of open issues grows, seeking an equilibrium.",What makes a good bug report?,"Bettenburg, N., Just, S., et al.",2008,"Better bug reports improve fix efficiency; as issue volume rises, communities adopt practices to improve report quality and throughput, stabilizing the backlog.",https://www.semanticscholar.org/paper/21fa1dba8539598210496cfcdb853fef719a0805,21fa1dba8539598210496cfcdb853fef719a0805,879,,IEEE Transactions on Software Engineering,Computer Science; Engineering
B01,balancing,Open Issues -> Issue Resolution Rate -> Open Issues,"This balancing loop stabilizes the issue backlog by increasing resolution efforts as the number of open issues grows, seeking an equilibrium.",Two case studies of open source software development: Apache and Mozilla,"Mockus, A., Fielding, R. T., et al.",2002,"Documents inflow/outflow dynamics and scaling of maintenance work in OSS, supporting backlog balancing through increased resolution effort.",https://www.semanticscholar.org/paper/b452c83fcdee0b9f3e02573144919487c1eae4d3,b452c83fcdee0b9f3e02573144919487c1eae4d3,1905,,TSEM,Computer Science
B02,balancing,Pull Request Under review -> Review Rate -> New Pull request -> Pull Request Under review,"This balancing loop regulates review workload by slowing the influx of new pull requests as the review queue grows, preventing reviewer burnout.","Expectations, outcomes, and challenges of modern code review","Bacchelli, A., Bird, C.",2013,"Identifies review process pressures and strategies to manage workload, indicating communities adapt policies to keep review queues sustainable.",https://www.semanticscholar.org/paper/3ad467fe13ffa8ee705d62d8228a2c254a96f5bd,3ad467fe13ffa8ee705d62d8228a2c254a96f5bd,744,,International Conference on Software Engineering,Computer Science
B03,balancing,User Base -> User Churn Rate -> User Base,"This balancing loop limits user base growth as a larger community naturally experiences some user churn, moving the system toward a stable size.",The open source software development phenomenon: An analysis based on social network theory,"Madey, G., Freeh, V., et al.",2002,Agent-based and network perspectives include joining and leaving dynamics; user churn naturally limits growth and tends toward equilibrium.,https://www.semanticscholar.org/paper/0634bf158f995676141846fb0d3e3e5a3ced5eb0,0634bf158f995676141846fb0d3e3e5a3ced5eb0,291,,,Computer Science
B03,balancing,User Base -> User Churn Rate -> User Base,"This balancing loop limits user base growth as a larger community naturally experiences some user churn, moving the system toward a stable size.","Community, joining, and specialization in open source software innovation: A case study","von Krogh, G., Spaeth, S., et al.",2003,"Documents participant flows and role changes over time, implying that as communities grow, some members churn out, balancing overall size.",https://www.semanticscholar.org/paper/b5ad2a6d67b8031668a53b704d7da9c0a8adbdce,b5ad2a6d67b8031668a53b704d7da9c0a8adbdce,1095,,,Computer Science
B03,balancing,User Base -> User Churn Rate -> User Base,"This balancing loop limits user base growth as a larger community naturally experiences some user churn, moving the system toward a stable size.",Understanding sustained participation in open source software projects,"Fang, Y., Neufeld, D.",2009,Shows that only a subset sustains long-term participation; attrition is expected and acts as a balancing mechanism on community size.,https://www.semanticscholar.org/paper/9e3beb8d9aa67d2cc705dff13577443ebb7f77d8,9e3beb8d9aa67d2cc705dff13577443ebb7f77d8,387,,Journal of Management Information Systems,Sociology; Computer Science
B04,balancing,Project Reputation -> Reputation Decline -> Project Reputation,"This balancing loop counteracts reputation growth, as high expectations or competing projects can lead to a decline, stabilizing the project's perceived value.",,,,,,,,,,
B05,balancing,Community Health -> Culture Erosion -> Community Health,"This balancing loop maintains community standards by triggering corrective actions when cultural erosion is detected, preserving the collaborative environment.",Socialization in an open source software community: A socio-technical analysis,"Ducheneaut, N.",2005,"Describes how norms and socialization maintain cooperative behavior; when norms weaken, communities enact measures to restore standards.",https://www.semanticscholar.org/paper/9e13b0df8c772d05019d54c453a51942151938ca,9e13b0df8c772d05019d54c453a51942151938ca,479,,Computer Supported Cooperative Work (CSCW),Computer Science
