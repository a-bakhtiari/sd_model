loop_id,loop_type,loop_edges,description,citation_title,citation_authors,citation_year,citation_relevance,semantic_scholar_url,semantic_scholar_paper_id,citation_count,abstract,venue,fields_of_study
R01,reinforcing,Project Reputation -> Joining Rate -> New Contributors -> PR Feedback -> Software Quality and Features -> Project Reputation,"This reinforcing loop creates a virtuous cycle where a good reputation attracts contributors whose work improves the software, which in turn further enhances the project's reputation.","Understanding the Motivations, Participation, and Performance of Open Source Software Developers: A Longitudinal Study of the Apache Projects","Jeffrey A. Roberts, I. Hann, S. Slaughter",2006,Demonstrates how project reputation and success attract developers who seek signaling benefits and career advancement,https://www.semanticscholar.org/paper/bbe089fedff2d9579c9c624539a7afbf505988b2,bbe089fedff2d9579c9c624539a7afbf505988b2,1103,,Management Sciences,Computer Science
R02,reinforcing,Project Reputation -> User Base -> Project Reputation,"This reinforcing loop amplifies growth as a larger user base increases a project's visibility and adoption, which directly strengthens its overall reputation.",The Impact of Ideology on Effectiveness in Open Source Software Development Teams,"K. Stewart, S. Gosain",2006,Shows how larger user communities enhance project legitimacy and attract more users,https://www.semanticscholar.org/paper/734a1101c739be8736086ca563380fbfcd965727,734a1101c739be8736086ca563380fbfcd965727,661,,MIS Q.,Engineering; Computer Science
R03,reinforcing,Core Developer -> Implicit Knowledge Transfer (Mentorship) -> Promotion Rate -> Core Developer,"This reinforcing loop grows the core team as experienced developers mentor others, creating a pipeline that promotes new members into core roles.",Not found in Semantic Scholar database,Not found in Semantic Scholar database,,,,,,,,
R04,reinforcing,Open Issues -> New Pr rate -> New Pull request -> Review Rate -> Pull Request Under review -> Merge/Commit -> Source Code -> Issue Creation Rate -> Open Issues,"This reinforcing loop can create a feature treadmill where more issues lead to more development activity, which in turn generates even more issues and pull requests.",Not found in Semantic Scholar database,Not found in Semantic Scholar database,,,,,,,,
B01,balancing,Open Issues -> Issue Resolution Rate -> Open Issues,"This balancing loop stabilizes the issue backlog by increasing resolution efforts as the number of open issues grows, seeking equilibrium.",Automated duplicate detection for bug tracking systems,"Nicholas Jalbert, Westley Weimer",2008,Shows technical mechanisms that help control issue backlog growth through duplicate detection,https://www.semanticscholar.org/paper/649acd55aeece28925dd384d15b01e54c525c3f0,649acd55aeece28925dd384d15b01e54c525c3f0,298,,Dependable Systems and Networks,Computer Science
B02,balancing,Pull Request Under review -> Review Rate -> Pull Request Under review,"This balancing loop regulates the review queue by increasing review activity when more pull requests are waiting, preventing infinite backlog growth.",Modern Code Review: A Case Study at Google,"Caitlin Sadowski, Emma SÃ¶derberg, Luke Church, Michael A. Sipko, Alberto Bacchelli",2017,Documents organizational practices for managing review queues and preventing bottlenecks,https://www.semanticscholar.org/paper/263568d744ae3d6e1284a1d10af6798fb76a398e,263568d744ae3d6e1284a1d10af6798fb76a398e,307,"Employing lightweight, tool-based code review of code changes (aka modern code review) has become the norm for a wide variety of open-source and industrial systems. In this paper, we make an exploratory investigation of modern code review at Google. Google introduced code review early on and evolved it over the years; our study sheds light on why Google introduced this practice and analyzes its current status, after the process has been refined through decades of code changes and millions of code reviews. By means of 12 interviews, a survey with 44 respondents, and the analysis of review logs for 9 million reviewed changes, we investigate motivations behind code review at Google, current practices, and developers' satisfaction and challenges.",2018 IEEE/ACM 40th International Conference on Software Engineering: Software Engineering in Practice Track (ICSE-SEIP),Computer Science
B02,balancing,Pull Request Under review -> Review Rate -> Pull Request Under review,"This balancing loop regulates the review queue by increasing review activity when more pull requests are waiting, preventing infinite backlog growth.",Characteristics of Useful Code Reviews: An Empirical Study at Microsoft,"Amiangshu Bosu, Michaela Greiler, C. Bird",2015,Shows how teams adjust review practices based on queue size and contributor availability,https://www.semanticscholar.org/paper/4c535cd6557b148cc048686ec64e20291b61c698,4c535cd6557b148cc048686ec64e20291b61c698,190,,2015 IEEE/ACM 12th Working Conference on Mining Software Repositories,Computer Science
B03,balancing,Core Developer -> PR Review Delay -> PR Feedback -> New Contributors -> Skill up -> Experienced Contributors -> Promotion Rate -> Core Developer,This balancing loop limits core team growth by creating a bottleneck; review delays from a busy core team slow the development of new contributors who could be promoted.,Social Barriers Faced by Newcomers Placing Their First Contribution in Open Source Software Projects,"Igor Steinmacher, T. Conte, M. Gerosa, D. Redmiles",2015,Identifies review process bottlenecks as significant barriers to contributor progression,https://www.semanticscholar.org/paper/18163f9f03c51a0f68d87523b52238680273acaf,18163f9f03c51a0f68d87523b52238680273acaf,276,,Conference on Computer Supported Cooperative Work,Sociology; Computer Science
B03,balancing,Core Developer -> PR Review Delay -> PR Feedback -> New Contributors -> Skill up -> Experienced Contributors -> Promotion Rate -> Core Developer,This balancing loop limits core team growth by creating a bottleneck; review delays from a busy core team slow the development of new contributors who could be promoted.,The hard life of open source software project newcomers,"Igor Steinmacher, I. Wiese, T. Conte, M. Gerosa, D. Redmiles",2014,Shows how core team availability and review capacity limit newcomer progression to core roles,https://www.semanticscholar.org/paper/d3bac0c27eba91d3d3c5b17592a3f670af3ab699,d3bac0c27eba91d3d3c5b17592a3f670af3ab699,63,,"IEEE/ACM International Conference on Connected Health: Applications, Systems and Engineering Technologies",Computer Science; Engineering
B04,balancing,User Base -> User Churn Rate -> User Base,"This balancing loop stabilizes the user base by causing user churn to increase as the base grows, counteracting unlimited expansion.",Not found in Semantic Scholar database,Not found in Semantic Scholar database,,,,,,,,
