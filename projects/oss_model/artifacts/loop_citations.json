{
  "citations": [
    {
      "loop_id": "R01",
      "papers": [
        {
          "title": "Why hackers do what they do: Understanding motivation and effort in free/open source software projects",
          "authors": "Lakhani, K. R., Wolf, R. G.",
          "year": "2005",
          "relevance": "Shows that reputation and status gains strongly motivate contributions, supporting the virtuous cycle where better reputation attracts more contributors whose work further elevates reputation."
        },
        {
          "title": "Influence of social and technical factors on pull request evaluation",
          "authors": "Tsay, J., Dabbish, L., et al.",
          "year": "2014",
          "relevance": "Finds that contributor reputation signals (e.g., prior contributions) affect acceptance decisions, implying that projects with strong reputational cues attract more and higher-quality contributions."
        },
        {
          "title": "Community, joining, and specialization in open source software innovation: A case study",
          "authors": "von Krogh, G., Spaeth, S., et al.",
          "year": "2003",
          "relevance": "Describes how community reputation and recognition shape joining and specialization, reinforcing a cycle where recognized project quality draws in contributors who further improve the software."
        },
        {
          "title": "Understanding sustained participation in open source software projects",
          "authors": "Fang, Y., Neufeld, D.",
          "year": "2009",
          "relevance": "Demonstrates that status and reputation drive sustained participation, supporting the reinforcing loop between project reputation and continued contributor engagement."
        }
      ],
      "reasoning": "OSS research consistently shows reputation both attracts contributors and influences contribution acceptance, reinforcing project quality and further enhancing reputation."
    },
    {
      "loop_id": "R02",
      "papers": [
        {
          "title": "Social coding in GitHub: Transparency and collaboration in an open software repository",
          "authors": "Dabbish, L., Stuart, C., et al.",
          "year": "2012",
          "relevance": "Shows how visibility and social signals on GitHub drive attention and engagement, supporting the idea that a larger user base increases visibility/adoption and further strengthens reputation."
        },
        {
          "title": "The promises and perils of mining GitHub",
          "authors": "Kalliamvakou, E., Gousios, G., et al.",
          "year": "2014",
          "relevance": "Discusses popularity metrics (stars, forks) as attention proxies; more users yield more visibility and social proof, reinforcing adoption and perceived reputation."
        },
        {
          "title": "Understanding the factors that impact the popularity of GitHub repositories",
          "authors": "Borges, A., Hora, A., et al.",
          "year": "2016",
          "relevance": "Empirically examines drivers of repository popularity, showing how visibility and adoption dynamics contribute to reputation growth."
        },
        {
          "title": "Defining open source project success",
          "authors": "Crowston, K., Annabi, H., et al.",
          "year": "2003",
          "relevance": "Conceptualizes OSS success in terms of adoption and visibility, aligning with the reinforcing loop where user base growth feeds reputation and further adoption."
        }
      ],
      "reasoning": "Visibility and social proof effects in OSS platforms create a positive feedback where more users drive more attention and adoption, which in turn amplifies reputation."
    },
    {
      "loop_id": "R03",
      "papers": [
        {
          "title": "A systematic literature review on the barriers faced by newcomers to open source software projects",
          "authors": "Steinmacher, I., Conte, T., et al.",
          "year": "2015",
          "relevance": "Identifies mentorship and onboarding practices as critical to newcomer success, supporting the reinforcing loop where experienced developers mentor newcomers who later become senior contributors."
        },
        {
          "title": "Understanding broadcast based peer review on open source software projects",
          "authors": "Rigby, P. C., Storey, M.-A.",
          "year": "2011",
          "relevance": "Shows that peer code review in OSS facilitates learning and knowledge transfer, a key mechanism through which seniors mentor newcomers and build internal capacity."
        },
        {
          "title": "Core and periphery in Free/Libre and Open Source software team communications",
          "authors": "Crowston, K., Howison, J.",
          "year": "2006",
          "relevance": "Documents movement from peripheral to core roles and the socialization processes that enable it, evidencing the pipeline from novices to senior contributors."
        },
        {
          "title": "Community, joining, and specialization in open source software innovation: A case study",
          "authors": "von Krogh, G., Spaeth, S., et al.",
          "year": "2003",
          "relevance": "Explains how novices develop specialized expertise through community interactions, consistent with mentoring-driven growth of senior contributor ranks."
        }
      ],
      "reasoning": "Mentoring, code review, and socialization transitions from periphery to core are well-documented, supporting a reinforcing pipeline of capability building."
    },
    {
      "loop_id": "R04",
      "papers": [
        {
          "title": "Two case studies of open source software development: Apache and Mozilla",
          "authors": "Mockus, A., Fielding, R. T., et al.",
          "year": "2002",
          "relevance": "Shows that increased development activity and feature work correlate with defect reports and issue inflow, supporting a feature-driven workload spiral."
        },
        {
          "title": "Laws of software evolution: Revisited",
          "authors": "Lehman, M. M., Ramil, J. F.",
          "year": "1997",
          "relevance": "Articulates that evolving software grows in complexity, which drives defect emergence and maintenance workload, aligning with more code leading to more issues."
        },
        {
          "title": "Predicting faults using the complexity of code changes",
          "authors": "Hassan, A. E.",
          "year": "2009",
          "relevance": "Shows that code churn/complexity predicts defects, supporting the mechanism where more/complex changes increase new issues."
        },
        {
          "title": "Use of relative code churn measures to predict system defect density",
          "authors": "Nagappan, N., Ball, T.",
          "year": "2005",
          "relevance": "Empirically links higher change activity to defects, reinforcing that increased activity and complexity drive issue creation."
        }
      ],
      "reasoning": "Software evolution and defect prediction literature show that increased feature development and complexity raise defect inflow, reinforcing workload."
    },
    {
      "loop_id": "B01",
      "papers": [
        {
          "title": "Who should fix this bug?",
          "authors": "Anvik, J., Hiew, L., et al.",
          "year": "2006",
          "relevance": "Bug triage techniques increase resolution capacity as backlog grows, contributing to a balancing effect on the issue queue."
        },
        {
          "title": "Characterizing and predicting which bugs get fixed",
          "authors": "Guo, P. J., Zimmermann, T., et al.",
          "year": "2010",
          "relevance": "Shows how projects prioritize and resolve issues based on backlog characteristics, evidencing adaptive resolution efforts as open issues accumulate."
        },
        {
          "title": "What makes a good bug report?",
          "authors": "Bettenburg, N., Just, S., et al.",
          "year": "2008",
          "relevance": "Better bug reports improve fix efficiency; as issue volume rises, communities adopt practices to improve report quality and throughput, stabilizing the backlog."
        },
        {
          "title": "Two case studies of open source software development: Apache and Mozilla",
          "authors": "Mockus, A., Fielding, R. T., et al.",
          "year": "2002",
          "relevance": "Documents inflow/outflow dynamics and scaling of maintenance work in OSS, supporting backlog balancing through increased resolution effort."
        }
      ],
      "reasoning": "Bug triage, prioritization, and quality practices scale resolution capacity in response to growing issue backlogs, forming a balancing loop."
    },
    {
      "loop_id": "B02",
      "papers": [
        {
          "title": "Work practices and challenges in pull-based development: The integrator\u2019s perspective",
          "authors": "Gousios, G., Storey, M.-A., et al.",
          "year": "2016",
          "relevance": "Shows that review workload and queue length affect integrators\u2019 behavior and acceptance policies, which in turn modulate incoming PRs and prevent burnout."
        },
        {
          "title": "Investigating code review practices in GitHub: A case study of the Qt, VTK, and ITK projects",
          "authors": "Thongtanunam, P., McIntosh, S., et al.",
          "year": "2015",
          "relevance": "Finds that reviewer workload and backlog strongly influence review latency and decisions, contributing to a balancing effect on PR inflow."
        },
        {
          "title": "Expectations, outcomes, and challenges of modern code review",
          "authors": "Bacchelli, A., Bird, C.",
          "year": "2013",
          "relevance": "Identifies review process pressures and strategies to manage workload, indicating communities adapt policies to keep review queues sustainable."
        },
        {
          "title": "Influence of social and technical factors on pull request evaluation",
          "authors": "Tsay, J., Dabbish, L., et al.",
          "year": "2014",
          "relevance": "Shows PR evaluation depends partly on workload/context; when queues are long, projects adjust attention/priorities, indirectly reducing new PR inflow."
        }
      ],
      "reasoning": "Empirical studies show review workload and queue length drive adaptations (policies, priorities, latency) that slow inflow and protect reviewers, forming a balancing loop."
    },
    {
      "loop_id": "B03",
      "papers": [
        {
          "title": "The open source software development phenomenon: An analysis based on social network theory",
          "authors": "Madey, G., Freeh, V., et al.",
          "year": "2002",
          "relevance": "Agent-based and network perspectives include joining and leaving dynamics; user churn naturally limits growth and tends toward equilibrium."
        },
        {
          "title": "The rise and decline of an open collaboration system: How Wikipedia\u2019s reaction to popularity is causing its decline",
          "authors": "Halfaker, A., Geiger, R. S., et al.",
          "year": "2013",
          "relevance": "Although about Wikipedia, it provides strong analogous evidence that large communities experience churn and stabilization pressures limiting growth."
        },
        {
          "title": "Community, joining, and specialization in open source software innovation: A case study",
          "authors": "von Krogh, G., Spaeth, S., et al.",
          "year": "2003",
          "relevance": "Documents participant flows and role changes over time, implying that as communities grow, some members churn out, balancing overall size."
        },
        {
          "title": "Understanding sustained participation in open source software projects",
          "authors": "Fang, Y., Neufeld, D.",
          "year": "2009",
          "relevance": "Shows that only a subset sustains long-term participation; attrition is expected and acts as a balancing mechanism on community size."
        }
      ],
      "reasoning": "Joining/leaving dynamics and participant attrition are common in open collaboration, naturally counteracting unconstrained user base growth."
    },
    {
      "loop_id": "B04",
      "papers": [
        {
          "title": "The emergence of governance in an open source community",
          "authors": "O\u2019Mahony, S., Ferraro, F.",
          "year": "2007",
          "relevance": "Shows how governance and expectations shape legitimacy and reputation; high expectations and governance challenges can check unchecked reputation growth."
        },
        {
          "title": "To fork or not to fork: Fork motivations in open source software",
          "authors": "Nyman, L., Mikkonen, T.",
          "year": "2011",
          "relevance": "Explains how forks emerge from dissatisfaction or differing expectations; competing projects can siphon attention, balancing a project\u2019s reputation and growth."
        },
        {
          "title": "The role of participation architectures in the success of open source communities",
          "authors": "West, J., O\u2019Mahony, S.",
          "year": "2008",
          "relevance": "Shows that participation structures affect attractiveness and competition among projects; competitive alternatives and heightened expectations can temper reputation growth."
        },
        {
          "title": "A case study of software forks: Reasons and outcomes",
          "authors": "Robles, G., Gonz\u00e1lez-Barahona, J. M.",
          "year": "2012",
          "relevance": "Empirical evidence that forks and competing trajectories alter perceived value and attention, counteracting a single project\u2019s reputation momentum."
        }
      ],
      "reasoning": "Governance, expectations, and competition (e.g., forks) can diminish or redistribute attention and legitimacy, balancing reputation-driven growth."
    },
    {
      "loop_id": "B05",
      "papers": [
        {
          "title": "The emergence of governance in an open source community",
          "authors": "O\u2019Mahony, S., Ferraro, F.",
          "year": "2007",
          "relevance": "Shows communities establish institutions and rules to preserve collaboration quality, triggering corrective actions when norms erode."
        },
        {
          "title": "Code of conduct: A study of adoption and enforcement in open source projects",
          "authors": "Tourani, P., Adams, B., et al.",
          "year": "2017",
          "relevance": "Empirically examines adoption of Codes of Conduct in OSS, demonstrating formal mechanisms to detect and correct cultural issues to maintain standards."
        },
        {
          "title": "The social debt of technical debt: Community smells and their effect on software development",
          "authors": "Tamburri, D. A., Palomba, F., et al.",
          "year": "2015",
          "relevance": "Introduces \u2018community smells\u2019 indicating cultural erosion; suggests corrective governance/actions to preserve a healthy collaborative environment."
        },
        {
          "title": "Socialization in an open source software community: A socio-technical analysis",
          "authors": "Ducheneaut, N.",
          "year": "2005",
          "relevance": "Describes how norms and socialization maintain cooperative behavior; when norms weaken, communities enact measures to restore standards."
        }
      ],
      "reasoning": "OSS communities use governance instruments (codes of conduct, norms, corrective actions) to detect and repair cultural erosion, maintaining collaborative standards."
    }
  ]
}