{
  "archetypes": [
    {
      "name": "Limits to Growth (Limits to Success)",
      "rationale": "The model shows a growth engine where New Contributors can become Core Developers through skill development and promotion, but there are implicit constraints. Core Developers drive knowledge transfer and mentoring, but they also experience turnover, creating a balancing feedback that limits unlimited growth. The system has reinforcing loops for growth but lacks explicit limiting factors that would complete the archetype.",
      "additions": {
        "variables": [
          {
            "name": "Mentoring Capacity Constraint",
            "type": "Auxiliary",
            "description": "The maximum number of newcomers that existing Core Developers can effectively mentor given their time and attention limits",
            "rationale": "Needed to represent the key limiting factor in the growth process - experienced developers have limited capacity for mentoring"
          },
          {
            "name": "Mentoring Workload Pressure",
            "type": "Auxiliary",
            "description": "The pressure on Core Developers from mentoring responsibilities relative to their available time",
            "rationale": "Represents the mechanism through which growth creates constraints on the system"
          }
        ],
        "connections": [
          {
            "from": "New Contributors",
            "to": "Mentoring Workload Pressure",
            "relationship": "positive",
            "rationale": "More newcomers increase the mentoring workload on existing developers"
          },
          {
            "from": "Core Developer",
            "to": "Mentoring Capacity Constraint",
            "relationship": "positive",
            "rationale": "More Core Developers increases the total mentoring capacity, but each has individual limits"
          },
          {
            "from": "Mentoring Workload Pressure",
            "to": "Developer's Turnover",
            "relationship": "positive",
            "rationale": "High mentoring workload pressure can increase burnout and turnover among Core Developers"
          },
          {
            "from": "Mentoring Capacity Constraint",
            "to": "Implicit Knowledge Transfer (Mentorship)",
            "relationship": "positive",
            "rationale": "Mentoring capacity limits the effectiveness of knowledge transfer"
          }
        ]
      },
      "modifications": {
        "variables": []
      },
      "removals": {
        "variables": []
      }
    },
    {
      "name": "Shifting the Burden",
      "rationale": "The model shows two approaches to knowledge transfer: Implicit Knowledge Transfer (mentorship) and Explicit Knowledge Transfer (documentation). This creates a classic 'shifting the burden' pattern where the system may rely more on the symptomatic solution (explicit documentation) rather than addressing the fundamental solution (developing mentoring capacity and tacit knowledge transfer). The explicit knowledge approach provides quick fixes but may undermine long-term mentoring effectiveness.",
      "additions": {
        "variables": [
          {
            "name": "Reliance on Documentation",
            "type": "Auxiliary",
            "description": "The degree to which the community depends on documentation versus personal mentoring for knowledge transfer",
            "rationale": "Represents the choice between fundamental and symptomatic solutions"
          },
          {
            "name": "Mentoring Skill Erosion",
            "type": "Auxiliary",
            "description": "The gradual loss of mentoring skills and practices due to over-reliance on documentation",
            "rationale": "Represents the side effect of shifting to the symptomatic solution"
          }
        ],
        "connections": [
          {
            "from": "Explicit Knowledge Transfer (Documentation, Contributor's Guides)",
            "to": "Reliance on Documentation",
            "relationship": "positive",
            "rationale": "Better documentation increases reliance on this approach"
          },
          {
            "from": "Reliance on Documentation",
            "to": "Mentoring Skill Erosion",
            "relationship": "positive",
            "rationale": "Over-reliance on documentation erodes mentoring skills over time"
          },
          {
            "from": "Mentoring Skill Erosion",
            "to": "Implicit Knowledge Transfer (Mentorship)",
            "relationship": "negative",
            "rationale": "Loss of mentoring skills reduces the effectiveness of mentorship"
          },
          {
            "from": "Implicit Knowledge Transfer (Mentorship)",
            "to": "Reliance on Documentation",
            "relationship": "negative",
            "rationale": "Effective mentorship reduces the need to rely on documentation"
          }
        ]
      },
      "modifications": {
        "variables": []
      },
      "removals": {
        "variables": []
      }
    },
    {
      "name": "Success to the Successful",
      "rationale": "The model shows a competitive advantage pattern where Core Developers gain more influence and resources over time. They drive knowledge creation, mentoring, and community identity, which further reinforces their success. This creates a virtuous cycle for successful developers but may create barriers for newcomers trying to advance, as resources and attention flow disproportionately to those already successful.",
      "additions": {
        "variables": [
          {
            "name": "Resource Allocation Bias",
            "type": "Auxiliary",
            "description": "The tendency to allocate more resources, attention, and opportunities to Core Developers versus newcomers",
            "rationale": "Represents the mechanism through which success breeds more success"
          },
          {
            "name": "Newcomer Advancement Barrier",
            "type": "Auxiliary",
            "description": "The difficulty newcomers face in advancing due to resource concentration with established developers",
            "rationale": "Represents the negative consequence for those not in the 'successful' group"
          }
        ],
        "connections": [
          {
            "from": "Core Developer",
            "to": "Resource Allocation Bias",
            "relationship": "positive",
            "rationale": "More Core Developers increases the bias toward allocating resources to them"
          },
          {
            "from": "Resource Allocation Bias",
            "to": "Implicit Knowledge Transfer (Mentorship)",
            "relationship": "positive",
            "rationale": "Resource bias gives Core Developers more capacity for effective mentoring"
          },
          {
            "from": "Resource Allocation Bias",
            "to": "Knowledge Externalization Rate",
            "relationship": "positive",
            "rationale": "More resources for Core Developers increases their knowledge creation"
          },
          {
            "from": "Resource Allocation Bias",
            "to": "Newcomer Advancement Barrier",
            "relationship": "positive",
            "rationale": "Resource concentration creates barriers for newcomers trying to advance"
          },
          {
            "from": "Newcomer Advancement Barrier",
            "to": "Promotion Rate",
            "relationship": "negative",
            "rationale": "Advancement barriers reduce the rate at which newcomers get promoted"
          }
        ]
      },
      "modifications": {
        "variables": []
      },
      "removals": {
        "variables": []
      }
    }
  ]
}